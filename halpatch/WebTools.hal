/*external updating procedure AutoRun();
external updating procedure BuhExportEn();
external procedure RetailSalesEn();
external procedure ManagersFullStockEn();


global webpublic updating Procedure WebRunRetailSalesEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		RetailSalesEn;
	ResetCompany(compnr);  
	
return;
end; 


global webpublic updating Procedure WebRunManagersFullStockEnEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		ManagersFullStockEn;
	ResetCompany(compnr);  
	
return;
end; 

global webpublic updating Procedure WebRunAutosendReports() //Edit***************************Sasha2,15:18 04.07.2014
begin

	AutoRun;

return;
end; 

global webpublic updating procedure WebBuhExportEn()
begin
	string 10 compnr;
	integer comp;
	
	compnr = webgetarg("compnr");
	
	if(blank(compnr))then begin
		comp = 0;
	end else begin
		comp = stringtoint(compnr);
	end;
	
	SetCompany(comp,false);
		BuhExportEn;
	ResetCompany(comp);  
	

return;
end;*/

global webpublic updating procedure WebGetIntORAnsver()
begin	
	area req,addit;
	json jreq;
	record IntORVc IntORr;
	string 100 order,token;
	longint i,alength,lastindex;
	integer cntr;
	string 100 tstr;
	
	setcompany(8,false);
	
	order = webgetarg("order");
	token = webgetarg("token");
	webgetpostdata(req);
	
	logtext(0,"WebGetIntORAnsver " & order & "   " & token);
	logtext(0,"Length " & getarealength(req));
	
	if(nonblank(order) and nonblank(token))then begin
		if(token=="7s44wkjm7U8374N7o1mkJN2vM")then begin
			IntORr.SerNr = stringtolongint(order);
			if(readfirstmain(IntORr,1,true))then begin
				for(i=0;i<getarealength(req);i=i+1)begin
					if(GetByteFromArea(req,i)==0 and i==getarealength(req)-1)then begin
						
					end else begin
						if(GetByteFromArea(req,i)==10)then begin
							AddByteToArea(13,addit);
							AddByteToArea(GetByteFromArea(req,i),addit);
						end else begin
							if(GetByteFromArea(req,i)!=13)then begin
								AddByteToArea(GetByteFromArea(req,i),addit);
							end;
						end;
					end;
				end;
				AddAreaToTextField(addit,IntORr);
				recordstore(IntORr,true);
				weboutstring("{\"result\":\"ok\"}");
			end;
		end;
	end;
return;
end;

global webpublic updating procedure WebTextTOINNoter()
begin	
	area req,addit;
	json jreq;
	record INVc INr;
	string 100 order,token;
	longint i,alength,lastindex;
	integer cntr;
	string 100 tstr;
	
	setcompany(8,false);
	
	token = webgetarg("token");
	webgetpostdata(req);
	
	if(nonblank(token))then begin
		if(token=="7s44wkjm7U8374N7o1mkJN2vM")then begin
			INr.Code = "00-00010226";
			if(readfirstmain(INr,1,true))then begin
				for(i=0;i<getarealength(req);i=i+1)begin
					if(GetByteFromArea(req,i)==0 and i==getarealength(req)-1)then begin
						
					end else begin
						if(GetByteFromArea(req,i)==10)then begin
							AddByteToArea(13,addit);
							AddByteToArea(GetByteFromArea(req,i),addit);
						end else begin
							if(GetByteFromArea(req,i)!=13)then begin
								AddByteToArea(GetByteFromArea(req,i),addit);
							end;
						end;
					end;
				end;
				AddAreaToTextField(addit,INr);
				weboutstring("{\"result\":\"ok\"}");
			end;
		end;
	end;
return;
end;

global webpublic updating procedure WebCustomNoter()
begin
	record NotepadVc Noter,OldNoter;
	record RLinkVc RLinkr;
	Integer notenr,cntr,nl;
	boolean findf;
	longint SVOSerNr, IntORSerNr,alength,i,lastindex;
	record SVOVc SVOr;
	record IntORVc IntORr;
	area req,anote;
	string 255 token,subject,tstr;
	
	setcompany(8,false);

	SVOSerNr = stringtolongint(webgetarg("svonr"));
	IntORSerNr = stringtolongint(webgetarg("intornr"));
	token = webgetarg("token");
	
	webgetpostdata(req);
	
	if(token=="7s44wkjm7U8374N7o1mkJN2vM")then begin
		if(getarealength(req)>20 and countlinesinarea(req)>2)then begin
			subject = getlinefromarea(req,0);
			if(len(subject)>0 and len(subject)<=50)then begin
				if(len(getlinefromarea(req,1))<3)then begin
					
					if(SVOSerNr>0)then begin
						SVOr.SerNr = SVOSerNr;
						if(readfirstmain(SVOr,1,true))then begin
							findf = true;
							notenr = 1;
							while (ReadRecordLink(SVOr,notenr,Noter,RLinkr)) begin
								 if(RLinkr.Comment==subject)then begin 
								 	recorddelete(Noter);
								 	recorddelete(RLinkr);
								 	notenr = notenr - 1;
								 end;
								 notenr = notenr + 1;
							end;
						end;
					end;
	
					if(IntORSerNr>0)then begin
						IntORr.SerNr = IntORSerNr;
						if(readfirstmain(IntORr,1,true))then begin
							findf = true;
							notenr = 1;
							while (ReadRecordLink(IntORr,notenr,Noter,RLinkr)) begin
								 if(RLinkr.Comment==subject)then begin 
								 	recorddelete(Noter);
								 	recorddelete(RLinkr);
								 	notenr = notenr - 1;
								 end;
								 notenr = notenr + 1;
							end;
						end;
					end;
					
					if(findf==true)then begin
						recordNew(Noter);
						alength = getarealength(req);
						cntr = 0;
						for(i=0;i<alength;i=i+1)begin
							if(i<alength-1)then begin
								if(getbytefromarea(req,i)==13 and getbytefromarea(req,i+1)==10)then begin
									nl = nl + 1;
									i=i+1;
								end else begin
									if(getbytefromarea(req,i)==13 or getbytefromarea(req,i)==10)then begin
										nl = nl + 1;
									end;
								end;
								
								if(nl==2)then begin
									getareafromarea(req,i+1,getarealength(req)-(i+1),anote);
									i = alength;
								end;
							end;
						end;
						AddAreaToTextField(anote,Noter);
						if (RecordInsert(Noter,true)) then begin
						
							if(SVOSerNr>0)then begin
								SVOr.SerNr = SVOSerNr;
								if(readfirstmain(SVOr,1,true))then begin
									CreateRecordLink(SVOr,CurrentCompany,Noter,CurrentCompany);  
									CreateRecordLink(Noter,CurrentCompany,SVOr,CurrentCompany);  
									notenr = 1;
									while (ReadRecordLink(SVOr,notenr,Noter,RLinkr)) begin
										notenr = notenr + 1;
									end;
									if (ReadRecordLink(SVOr,notenr-1,Noter,RLinkr)) then begin
										RLinkr.Comment = subject;//"Printed Docs";   
										if (RecordStore(RLinkr,true)) then begin  end;
									end;
								end;
							end;
						end;
						Noter.SerNr = -1;
						if (RecordInsert(Noter,true)) then begin
							if(IntORSerNr>0)then begin
								IntORr.SerNr = IntORSerNr;
								if(readfirstmain(IntORr,1,true))then begin
									CreateRecordLink(IntORr,CurrentCompany,Noter,CurrentCompany);  
									CreateRecordLink(Noter,CurrentCompany,IntORr,CurrentCompany);  
									notenr = 1;
									while (ReadRecordLink(IntORr,notenr,Noter,RLinkr)) begin
										notenr = notenr + 1;
									end;
									if (ReadRecordLink(IntORr,notenr-1,Noter,RLinkr)) then begin
										RLinkr.Comment = subject;//"Printed Docs";   
										if (RecordStore(RLinkr,true)) then begin  end;
									end;
								end;
							end;
						end;
					end;
					weboutstring("{\"result\":\"ok\"}");
				end;
			end;
		end;
	end;

	
return;
end;


global webpublic updating procedure WebCreateTask()
begin
	area req;
	json jreq;
	record ActVc Actr;
	record SVOVc SVOr;
	record IntORVc IntORr;
	
	setcompany(8,false);
	
	webgetpostdata(req);
	
  logtext(0,"WebCreateTask ");
	logtext(0,"Length " & getarealength(req));
	
	jreq = parsejsonarea(req);
	if(JSONGet(jreq,"token")=="7s44wkjm7U8374N7o1mkJN2vM")then begin		
		Actr.SymbNr = 3;
		Actr.TodoFlag = kTodoFlagTodo;
		Actr.AlarmType = kAlarmTypeNone;
		Actr.MainPersons = JSONGet(jreq,"login");
		Actr.TransDate = currentdate;
		Actr.StartTime = currenttime;
		Actr.Comment = JSONGet(jreq,"text");
		Actr.Comment1 = JSONGet(jreq,"text2");
		Actr.SVOSerNr = stringtolongint(JSONGet(jreq,"SVOSerNr"));
		Actr.IntORNr = stringtolongint(JSONGet(jreq,"IntORSerNr"));
		Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");
		
		if(recordinsert(Actr,true))then begin
			SVOr.SerNr = Actr.SVOSerNr;
			if(readfirstmain(SVOr,1,true))then begin
				createrecordlink(SVOr,currentcompany,Actr,currentcompany);
				createrecordlink(Actr,currentcompany,SVOr,currentcompany);
			end;
			IntORr.SerNr = Actr.IntORNr;
			if(readfirstmain(IntORr,1,true))then begin
				createrecordlink(IntORr,currentcompany,Actr,currentcompany);
				createrecordlink(Actr,currentcompany,IntORr,currentcompany);
			end;
			weboutstring("{\"result\":\"ok\"}");
		end;
	end;
	
	
return;
end;

global webpublic updating procedure WebDeleteOldAct()
begin
  record ActVc Actr;
  
  setcompany(8,false);
  
  logtext(0,"WebDeleteOldAct st");

  while(loopmain(Actr,1,true))begin
    if(Actr.OKFlag==1 and Actr.TransDate<addday(currentdate,-30))then begin
      recorddelete(Actr);
      stepback(Actr);
    end;
  
  end;
  
  logtext(0,"Actr end");

return;
end;

global webpublic updating procedure WebCheckNotes()
begin
  record NotepadVc Noter;
  boolean TrHs;
  integer counter;
  
  setcompany(8,false);
  
  logtext(0,"WebCheckNotes st");

  TrHs = true;
  while(loopbackkey("SerNr",Noter,1,TrHs))begin
    
    weboutstring(Noter.SerNr & " =======  " & Noter.CompanyNr & " ===== " & Noter.FromRecidStr);
    
    counter = counter + 1;
    if(counter>1000)then begin
      TrHs = true;
    end;
  end;
  
  logtext(0,"Actr end");

return;
end;

