procedure ReadImportTagcu5Record(record CUVc CUr)
begin
  string 255 tstr;
  RecordNew(CUr);
  
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  CUr.Code = ImportField;
  CUr.Name = ImportField;
  CUr.Person = ImportField;
  CUr.WarnText1 = ImportField;
  CUr.InvAddr0 = ImportField;
  CUr.InvAddr1 = ImportField;
  CUr.InvAddr2 = ImportField;
  CUr.InvoiceToCode = ImportField;
  CUr.DelAddr0 = ImportField;
  CUr.DelAddr1 = ImportField;
  CUr.DelAddr2 = ImportField;
  CUr.Phone = ImportField;
  CUr.Fax = ImportField;
  CUr.CustCat = ImportField;
  CUr.Comment = ImportField;
  CUr.PayDeal = ImportField;
  CUr.ExportFlag = StringToInt(ImportField);
  CUr.AccFlag = StringToInt(ImportField);
  CUr.Objects = ImportField;
  CUr.InterestFlag = StringToInt(ImportField);
  CUr.VATNr = ImportField;
  CUr.CountryCode = ImportField;
  CUr.SearchKey = ImportField;
  CUr.RemndrFlag = StringToInt(ImportField);
  CUr.LangCode = ImportField;
  CUr.CurncyCode = ImportField;
  CUr.OnAccount = StringToInt(ImportField);
  CUr.SalesMan = ImportField;
  CUr.CreditLimit = StringToVal(ImportField,M4Val);
  CUr.ShipDeal = ImportField;
  CUr.ShipMode = ImportField;
  CUr.VATCode = ImportField;
  CUr.Department = ImportField;
  CUr.OrderComment = ImportField;
  CUr.FreightNr = ImportField;
  CUr.PLCode = ImportField;
  CUr.RebCode = ImportField;
  CUr.Classification = ImportField;
  CUr.blockedFlag = StringToInt(ImportField);
  CUr.DateChanged = StringToDate(ImportField);
  CUr.AccOperator = ImportField;
  CUr.SecAccount = ImportField;
  CUr.BankAccount = ImportField;
  CUr.JobDesc = ImportField;
  CUr.CustType = StringToInt(ImportField);
  CUr.ComCode = ImportField;
  CUr.Sorting = ImportField;
  CUr.RegNr1 = ImportField;
  CUr.RegNr2 = ImportField;
  CUr.CPRNr = ImportField;
  CUr.wwwAddr = ImportField;
  CUr.CompItemCode = ImportField;
  CUr.ANACode = ImportField;
  CUr.EDIFlag = StringToInt(ImportField);
  CUr.eMail = ImportField;
  CUr.IntRate = StringToVal(ImportField,M4Val);
  CUr.TheirCode = ImportField;
  CUr.PriceBasedOn = StringToInt(ImportField);
  CUr.DeliveryBasedOn = StringToInt(ImportField);
  CUr.SalesGroup = ImportField;
  CUr.SortCode = ImportField;
  CUr.AllowLogin = StringToInt(ImportField);
  CUr.Password = StringToLongint(ImportField);
  CUr.FTPLogin = StringToInt(ImportField);
  CUr.DateCreated = StringToDate(ImportField);
  CUr.EGOFlag = StringToInt(ImportField);
  CUr.InvAddr3 = ImportField;
  CUr.DelAddr3 = ImportField;
  CUr.xArea = ImportField;
  CUr.xAreaName = ImportField;
  CUr.InvAddr4 = ImportField;
  CUr.DelAddr4 = ImportField;
  CUr.WebConf = ImportField;
  CUr.WebStartPage = ImportField;
  CUr.FreightCode = ImportField;
  CUr.MainDispGroup = ImportField;
  CUr.AutoGiro = StringToInt(ImportField);
  CUr.OnHoldFlag = StringToInt(ImportField);
  CUr.ColectionFlag = StringToInt(ImportField);
  CUr.LocationCode = ImportField;
  CUr.WebDisplays = ImportField;
  CUr.Mobile = ImportField;
  CUr.NoLetterPosting = StringToInt(ImportField);
  CUr.FiscalFlag = StringToInt(ImportField);
  CUr.UserStr1 = ImportField;
  CUr.UserStr2 = ImportField;
  CUr.UserStr3 = ImportField;
  CUr.UserStr4 = ImportField;
  CUr.UserStr5 = ImportField;
  CUr.UserVal1 = StringToVal(ImportField,M4UVal);
  CUr.UserVal2 = StringToVal(ImportField,M4UVal);
  CUr.UserVal3 = StringToVal(ImportField,M4UVal);
  CUr.UserDate1 = StringToDate(ImportField);
  CUr.UserDate2 = StringToDate(ImportField);
  CUr.UserDate3 = StringToDate(ImportField);
  CUr.AccAP = ImportField;
  CUr.AccCost = ImportField;
  CUr.Bank = ImportField;
  CUr.OnAccAccAP = ImportField;
  CUr.MinOrdSum = StringToVal(ImportField,M4Val);
  CUr.PurchAcc = ImportField;
  CUr.RefStr = ImportField;
  CUr.WithPayMode = ImportField;
  CUr.RetainPrc = ImportField;
  CUr.NoMailPosting = StringToInt(ImportField);
  CUr.VEType = StringToInt(ImportField);
  CUr.CUType = StringToInt(ImportField);
  CUr.VEPayDeal = ImportField;
  CUr.VEShipDeal = ImportField;
  CUr.VEShipMode = ImportField;
  CUr.VECreditLimit = StringToVal(ImportField,M4Val);
  CUr.VEObjects = ImportField;
  CUr.VEWarnText1 = ImportField;
  CUr.VEFactoring = ImportField;
  CUr.VECurncyCode = ImportField;
  CUr.VECustID = ImportField;
  CUr.VEVATCode = ImportField;
  CUr.NoFactoringFlag = StringToInt(ImportField);
  CUr.NoRepa = StringToInt(ImportField);
  CUr.VECat = ImportField;
  CUr.IBANCode = ImportField;
  CUr.xEInvAddr = ImportField;
  CUr.xEInvFunc = StringToInt(ImportField);
  CUr.xAcceptanceGroup = ImportField;
  CUr.WebServiceChannel = StringToInt(ImportField);
  CUr.SkypeName = ImportField;
  CUr.Region = ImportField;
  CUr.NoTax1 = StringToInt(ImportField);
  CUr.NoTax2 = StringToInt(ImportField);
  CUr.GuestType = StringToInt(ImportField);
  CUr.PassportNr = ImportField;
  CUr.Profesion = ImportField;
  CUr.Nationality = ImportField;
  CUr.BirthDate = StringToDate(ImportField);
  CUr.Gender = StringToInt(ImportField);
  CUr.Newspaper = ImportField;
  CUr.Smoking = StringToInt(ImportField);
  CUr.DocType = ImportField;
  CUr.Blacklist = StringToInt(ImportField);
  CUr.MarStatus = StringToInt(ImportField);
  CUr.Passphrase = ImportField;
  CUr.SIPCode = ImportField;
  CUr.AltPhone = ImportField;
  CUr.Comment0 = ImportField;
  CUr.Comment1 = ImportField;
  CUr.Comment2 = ImportField;
  CUr.Title = ImportField;
  CUr.Salutation1 = ImportField;
  CUr.Salutation2 = ImportField;
  CUr.Salutation3 = ImportField;
  //CUr.xUserCode = 
  ImportField;
  CUr.DealerType = StringToInt(ImportField);
  CUr.GroupInv = StringToInt(ImportField);
  CUr.AddressBooks = ImportField;
  CUr.Extension = ImportField;
  CUr.TourOperator = ImportField;
  CUr.Agent = ImportField;
  CUr.DietRemarks = ImportField;
  CUr.RequirementRemarks = ImportField;
  CUr.AgeStatus = StringToInt(ImportField);
  CUr.Age = StringToLongint(ImportField);
  CUr.DefGuestPayMode = ImportField;
  CUr.BookOrigin = ImportField;
  CUr.TaxTemplateCode = ImportField;
  CUr.VETaxTemplateCode = ImportField;
  CUr.EmployeeType = StringToInt(ImportField);
  CUr.Ethnicity = ImportField;
  CUr.BirthPlace = ImportField;
  CUr.IDNr = ImportField;
  CUr.VisaType = ImportField;
  CUr.VisaNr = ImportField;
  CUr.VisaExpiry = StringToDate(ImportField);
  CUr.MilitaryDocNr = ImportField;
  CUr.SocialSecurityNr = ImportField;
  CUr.DisabledStatus = StringToInt(ImportField);
  CUr.Disability = ImportField;
  CUr.HealthStatus = ImportField;
  CUr.HealthIssues = ImportField;
  CUr.DriverLicenceCategory = ImportField;
  CUr.SchoolName = ImportField;
  CUr.EducationalDegree = ImportField;
  CUr.EducationalMajor = ImportField;
  CUr.EducationStatus = StringToInt(ImportField);
  CUr.PreviousEmployer = ImportField;
  CUr.PreviousJobTitle = ImportField;
  CUr.Birthday = ImportField;
  CUr.VERebCode = ImportField;
  CUr.SelfBilling = StringToInt(ImportField);
  CUr.DelCountry = ImportField;
  CUr.VEInvoiceToCode = ImportField;
  CUr.MainPartner = ImportField;
  CUr.CreditLimitDays = StringToLongint(ImportField);
  CUr.VECreditLimitDays = StringToLongint(ImportField);
  CUr.BusinessEntity = StringToInt(ImportField);
  CUr.SuframaRegNr = ImportField;
  CUr.DefMarkup = ImportField;
  CUr.InvCountryName = ImportField;
  CUr.DelCountryName = ImportField;
  CUr.PaymentCode = ImportField;
  CUr.MarketUserName = ImportField;
  CUr.RemoteBackupsPassword = ImportField;
  CUr.RemoteBackupsAddress = ImportField;
  CUr.RemoteBackupsPort = StringToInt(ImportField);
  CUr.BirthCountry = ImportField;
  CUr.LegalForm = ImportField;
  CUr.VATNrCheckDate = StringToDate(ImportField);
  CUr.QQName = ImportField;
  CUr.WeiboName = ImportField;
  CUr.RecipientGLN = ImportField;
  CUr.IPBookVAT = StringToInt(ImportField);
  CUr.OPBookVAT = StringToInt(ImportField);
  CUr.BillingTypePreference = StringToInt(ImportField);
  CUr.TaxCondition = StringToInt(ImportField);
  CUr.Partner = StringToInt(ImportField);
  
  while (NextImportLine(false)) begin
    tstr = ImportField;
    if nonblank(tstr) then begin
      AddToText(tstr,CUr);
      if (ImportIntoText(CUr)) then begin
      end;
    end;
  end;
  
  return;
end;

global
updating procedure ReadImportTagcu5(string thetag)
begin
  record CUVc CUr;
  
  while (NextImportLine(false)) begin
    ReadImportTagcu5Record(CUr);
    //logtext(0,currentcompany & "  " & CUr.Code); 
		RecordImportStore(CUr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrcu5(Integer compnr,string thetag)
begin
  record CUVc CUr;
  
  CUr.Code = ImportField;
  ReadRecordIdStrcu5 = BuildRecordIdStr(CUr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:45:42// Edit ************************** Thursday, 5 October 2017 16:45:44// Edit ************************** Thursday, 5 October 2017 16:45:45

procedure ReadImportTagItemHistVc2Record(record ItemHistVc ItemHistr)
begin
  string 255 tstr;
  RecordNew(ItemHistr);
  ItemHistr.SerNr = StringToLongint(ImportField);
  ItemHistr.ArtCode = ImportField;
  ItemHistr.Variety = ImportField;
  ItemHistr.Location = ImportField;
  ItemHistr.FileName = ImportField;
  ItemHistr.TransNr = StringToLongint(ImportField);
  ItemHistr.Row = StringToInt(ImportField);
  ItemHistr.TransDate = StringToDate(ImportField);
  ItemHistr.StockAffectf = StringToInt(ImportField);
  ItemHistr.Qty = StringToVal(ImportField,M45Val);
  ItemHistr.Qty2 = StringToVal(ImportField,M45Val);
  ItemHistr.RemQty = StringToVal(ImportField,M45Val);
  ItemHistr.Source = StringToLongint(ImportField);
  ItemHistr.TotCostPrice = StringToVal(ImportField,M45Val);
  ItemHistr.SerialNr = ImportField;
  ItemHistr.RemCostPrice = StringToVal(ImportField,M45Val);
  ItemHistr.FIFODate = StringToDate(ImportField);
  ItemHistr.WATotCost = StringToVal(ImportField,M45Val);
  ItemHistr.CPTotCost = StringToVal(ImportField,M45Val);
  ItemHistr.BPTotCost = StringToVal(ImportField,M45Val);
  ItemHistr.WATotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.CPTotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.BPTotCostPerLoc = StringToVal(ImportField,M45Val);
  ItemHistr.Position = ImportField;
  ItemHistr.Invalid = StringToInt(ImportField);
  ItemHistr.SerNrPerLoc = StringToVal(ImportField,M4Qty);
  ItemHistr.VECode = ImportField;
  ItemHistr.ConsigStock = StringToInt(ImportField);
  ItemHistr.WillBePurged = StringToInt(ImportField);
  ItemHistr.TREOStock = StringToInt(ImportField);
  ItemHistr.PrimaryCostModel = StringToInt(ImportField);
  ItemHistr.QueuedCostModel = StringToInt(ImportField);
  ItemHistr.FIFOPerLocation = StringToInt(ImportField);
  ItemHistr.ItemType = StringToInt(ImportField);
  ItemHistr.FIFOPerSerialNr = StringToInt(ImportField);
  ItemHistr.NoNLCostOnShip = StringToInt(ImportField);
  ItemHistr.WAPerLocation = StringToInt(ImportField);
  ItemHistr.WABase2 = StringToInt(ImportField);
  ItemHistr.UpdWeightAvFromRetPU = StringToInt(ImportField);
  ItemHistr.UpdWeightAvFromRet = StringToInt(ImportField);
  ItemHistr.PUCurncyCode = ImportField;
  ItemHistr.InFileName = ImportField;
  ItemHistr.InSerNr = StringToLongint(ImportField);
  ItemHistr.InRow = StringToInt(ImportField);
  ItemHistr.TotCostPriceCurncy = StringToVal(ImportField,M45Val);
  ItemHistr.RemCostPriceCurncy = StringToVal(ImportField,M45Val);
  
  return;
end;

global
updating procedure ReadImportTagItemHistVc2(string thetag)
begin
  record ItemHistVc ItemHistr;
  
  while (NextImportLine(false)) begin
    ReadImportTagItemHistVc2Record(ItemHistr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(ItemHistr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrItemHistVc2(Integer compnr,string thetag)
begin
  record ItemHistVc ItemHistr;
  
  ItemHistr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrItemHistVc2 = BuildRecordIdStr(ItemHistr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:46:00// Edit ************************** Thursday, 5 October 2017 16:46:02

procedure ReadImportTagstockmov1Record(record StockMovVc StockMovr)
begin
  string 255 tstr;
  row StockMovVc StockMovrw;
  integer rwcnt;
  
  RecordNew(StockMovr);
  StockMovr.SerNr = StringToLongint(ImportField);
  StockMovr.RegDate = StringToDate(ImportField);
  StockMovr.Comment = ImportField;
  StockMovr.FrLocation = ImportField;
  StockMovr.ToLocation = ImportField;
  StockMovr.OKFlag = StringToInt(ImportField);
  StockMovr.Sign = ImportField;
  StockMovr.CurncyCode = ImportField;
  StockMovr.ToRateB1 = StringToVal(ImportField,M4Rate);
  StockMovr.TransDate = StringToDate(ImportField);
  StockMovr.ExportedFlag = StringToInt(ImportField);
  StockMovr.FrRate = StringToVal(ImportField,M4Rate);
  StockMovr.ToRateB2 = StringToVal(ImportField,M4Rate);
  StockMovr.BaseRate1 = StringToVal(ImportField,M4Rate);
  StockMovr.BaseRate2 = StringToVal(ImportField,M4Rate);
  StockMovr.TotQty = StringToVal(ImportField,M4Qty);
  StockMovr.FrLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.ToLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.IntORNo = StringToLongint(ImportField);
  StockMovr.TotWeight = StringToVal(ImportField,M4Qty);
  StockMovr.TotVolume = StringToVal(ImportField,M4Qty);
  StockMovr.Objects = ImportField;
  StockMovr.FrPos = ImportField;
  StockMovr.ToPos = ImportField;
  StockMovr.OtherExtraCosts = StringToVal(ImportField,M423Val);
  StockMovr.ProdSerNr = StringToLongint(ImportField);
  StockMovr.RefStr = ImportField;
  StockMovr.DeliveryMan = ImportField;
  StockMovr.Prntdf = StringToInt(ImportField);
  StockMovr.ShipMode = ImportField;
  StockMovr.ShipDeal = ImportField;
  StockMovr.Sorting = ImportField;
  StockMovr.SHNr = StringToLongint(ImportField);
  StockMovr.ManualPick = StringToInt(ImportField);
  StockMovr.ToForkLiftQue = StringToInt(ImportField);
  StockMovr.FileName = ImportField;
  StockMovr.TransNr = StringToLongint(ImportField);
  StockMovr.ThrouLocation = ImportField;
  StockMovr.SentOKFlag = StringToInt(ImportField);
  StockMovr.Reserved = StringToInt(ImportField);
  StockMovr.SentTransDate = StringToDate(ImportField);
  StockMovr.FrThrouLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.ToThrouLocOKNr = StringToVal(ImportField,M4Qty);
  StockMovr.FreightCode = ImportField;
  StockMovr.FreightCompanyRegNr = ImportField;
  StockMovr.FreightCompany = ImportField;
  StockMovr.TruckInfo = ImportField;
  StockMovr.Driver = ImportField;
  StockMovr.CMRText = ImportField;
  StockMovr.TotSentQty = StringToVal(ImportField,M4Qty);
  StockMovr.OrdFlag = StringToInt(ImportField);
  StockMovr.PlanSendDate = StringToDate(ImportField);
  StockMovr.PlanSendTime = StringToTime(ImportField);
  StockMovr.PlanDurationDays = StringToInt(ImportField);
  StockMovr.PlanDurationTime = StringToTime(ImportField);
  StockMovr.PlanArrDate = StringToDate(ImportField);
  StockMovr.PlanArrTime = StringToTime(ImportField);
  StockMovr.ActSendDate = StringToDate(ImportField);
  StockMovr.ActSendTime = StringToTime(ImportField);
  StockMovr.ActDurationDays = StringToInt(ImportField);
  StockMovr.ActDurationTime = StringToTime(ImportField);
  StockMovr.ActArrDate = StringToDate(ImportField);
  StockMovr.ActArrTime = StringToTime(ImportField);
  StockMovr.OrdTransDate = StringToDate(ImportField);
  StockMovr.TreatedFlag = StringToInt(ImportField);
  StockMovr.Invalid = StringToInt(ImportField);
  StockMovr.InvalidDate = StringToDate(ImportField);
  StockMovr.Reason = ImportField;
  StockMovr.ThrouPosition = ImportField;
  StockMovr.TerminalID = ImportField;
  StockMovr.BranchID = ImportField;
  StockMovr.OfficialSerNr = ImportField;
  StockMovr.Hash = ImportField;
  StockMovr.HashKeyVersion = StringToInt(ImportField);
  StockMovr.RegTime = StringToTime(ImportField);
  StockMovr.LocalMachineCode = ImportField;
  StockMovr.StockMovType = StringToInt(ImportField);
  StockMovr.OrderNr = StringToLongint(ImportField);
  StockMovr.OKBy = ImportField;
  StockMovr.FrAddr0 = ImportField;
  StockMovr.FrAddr1 = ImportField;
  StockMovr.FrAddr2 = ImportField;
  StockMovr.FrAddr3 = ImportField;
  StockMovr.FrAddr4 = ImportField;
  StockMovr.ToAddr0 = ImportField;
  StockMovr.ToAddr1 = ImportField;
  StockMovr.ToAddr2 = ImportField;
  StockMovr.ToAddr3 = ImportField;
  StockMovr.ToAddr4 = ImportField;
  StockMovr.ThrouAddr0 = ImportField;
  StockMovr.ThrouAddr1 = ImportField;
  StockMovr.ThrouAddr2 = ImportField;
  StockMovr.ThrouAddr3 = ImportField;
  StockMovr.ThrouAddr4 = ImportField;
  StockMovr.TaxAdminServSeal = ImportField;
  StockMovr.Status = StringToInt(ImportField);
  StockMovr.OfficialSerNrSerie = ImportField;
  StockMovr.OfficialSerNr2 = ImportField;
  StockMovr.OfficialSerNr2Serie = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(StockMovr,StockMovrw,1);
    StockMovrw.ArtCode = ImportField;
    StockMovrw.Quant = StringToVal(ImportField,M4UVal);
    StockMovrw.Spec = ImportField;
    StockMovrw.SerialNr = ImportField;
    StockMovrw.NewPrice = StringToVal(ImportField,M45Val);
    StockMovrw.ExtraSCost = ImportField;
    StockMovrw.OldPrice = StringToVal(ImportField,M45Val);
    StockMovrw.FIFORowVal = StringToVal(ImportField,M45Val);
    StockMovrw.BasePrice = StringToVal(ImportField,M423Val);
    StockMovrw.Coefficient = StringToVal(ImportField,M45Val);
    StockMovrw.IntORRow = StringToLongint(ImportField);
    StockMovrw.Objects = ImportField;
    StockMovrw.UnitXval = StringToVal(ImportField,M4UVal);
    StockMovrw.UnitYval = StringToVal(ImportField,M4UVal);
    StockMovrw.UnitZval = StringToVal(ImportField,M4UVal);
    StockMovrw.FrPosCode = ImportField;
    StockMovrw.ToPosCode = ImportField;
    StockMovrw.SHRow = StringToLongint(ImportField);
    StockMovrw.SentQuant = StringToVal(ImportField,M4UVal);
    StockMovrw.OrdQuant = StringToVal(ImportField,M4UVal);
    StockMovrw.SentNewPrice = StringToVal(ImportField,M45Val);
    StockMovrw.SentExtraSCost = ImportField;
    StockMovrw.SentOldPrice = StringToVal(ImportField,M45Val);
    StockMovrw.SentFIFORowVal = StringToVal(ImportField,M45Val);
    StockMovrw.ThrouPosCode = ImportField;
    StockMovrw.ORRow = StringToLongint(ImportField);
    MatRowPut(StockMovr,rwcnt,StockMovrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagstockmov1(string thetag)
begin
  record StockMovVc StockMovr;
  
  while (NextImportLine(false)) begin
    ReadImportTagstockmov1Record(StockMovr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(StockMovr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrstockmov1(Integer compnr,string thetag)
begin
  record StockMovVc StockMovr;
  
  StockMovr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrstockmov1 = BuildRecordIdStr(StockMovr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:46:56// Edit ************************** Thursday, 5 October 2017 16:46:57// Edit ************************** Thursday, 5 October 2017 16:46:58

procedure ReadImportTagORVc2Record(record ORVc ORr)
begin
  record TaxMatrixVc TMr;
  string 255 tstr;
  row ORVc ORrw;
  integer rwcnt;
  
  RecordNew(ORr);
  ORr.SerNr = StringToLongint(ImportField);
  ORr.OrdDate = StringToDate(ImportField);
  ORr.CustCode = ImportField;
  ORr.Addr0 = ImportField;
  ORr.Addr1 = ImportField;
  ORr.Addr2 = ImportField;
  ORr.Addr3 = ImportField;
  ORr.OurContact = ImportField;
  ORr.CustContact = ImportField;
  ORr.ExportFlag = StringToInt(ImportField);
  ORr.InvFlag = StringToInt(ImportField);
  ORr.ShipFlag = StringToInt(ImportField);
  ORr.Prntdf = StringToInt(ImportField);
  ORr.PayDeal = ImportField;
  ORr.CustCat = ImportField;
  ORr.InvMark = StringToInt(ImportField);
  ORr.ShipMark = StringToInt(ImportField);
  ORr.Objects = ImportField;
  ORr.ShipMode = ImportField;
  ORr.OrderStatus = StringToInt(ImportField);
  ORr.PlanShip = ImportField;
  ORr.SalesMan = ImportField;
  ORr.Sign = ImportField;
  ORr.ShipDeal = ImportField;
  ORr.ShipAddr0 = ImportField;
  ORr.ShipAddr1 = ImportField;
  ORr.ShipAddr2 = ImportField;
  ORr.ShipAddr3 = ImportField;
  ORr.CurncyCode = ImportField;
  ORr.LangCode = ImportField;
  ORr.InvoiceToCode = ImportField;
  ORr.Closed = StringToInt(ImportField);
  ORr.ToRateB1 = StringToVal(ImportField,M4Rate);
  ORr.BuildOn = StringToInt(ImportField);
  ORr.PRCode = ImportField;
  ORr.Comment = ImportField;
  ORr.InvOnlyOnFull = StringToInt(ImportField);
  ORr.DownPaySent = StringToVal(ImportField,M4Val);
  ORr.DownPayRedcd = StringToVal(ImportField,M4Val);
  ORr.OrderClass = ImportField;
  ORr.CustOrdNr = ImportField;
  ORr.PriceList = ImportField;
  ORr.InclVAT = StringToInt(ImportField);
  ORr.Sum0 = StringToVal(ImportField,M4Val);
  ORr.Sum1 = StringToVal(ImportField,M4Val);
  ORr.Sum2 = StringToVal(ImportField,M4Val);
  ORr.Sum3 = StringToVal(ImportField,M4Val);
  ORr.Sum4 = StringToVal(ImportField,M4Val);
  ORr.Reserved = StringToInt(ImportField);
  ORr.OSFlag = StringToInt(ImportField);
  ORr.Location = ImportField;
  ORr.CustVATCode = ImportField;
  ORr.RebCode = ImportField;
  ORr.VATNr = ImportField;
  ORr.Phone = ImportField;
  ORr.Fax = ImportField;
  ORr.ExportedFlag = StringToInt(ImportField);
  ORr.BaseSum4 = StringToVal(ImportField,M4Val);
  ORr.FrRate = StringToVal(ImportField,M4Rate);
  ORr.ToRateB2 = StringToVal(ImportField,M4Rate);
  ORr.BaseRate1 = StringToVal(ImportField,M4Rate);
  ORr.BaseRate2 = StringToVal(ImportField,M4Rate);
  ORr.DiscPerc = StringToVal(ImportField,M4Qty);
  ORr.DiscSum = StringToVal(ImportField,M4Val);
  ORr.TotGP = StringToVal(ImportField,M4Val);
  ORr.Probability = StringToVal(ImportField,M41Val);
  ORr.CreditCard = ImportField;
  ORr.AuthorizationCode = ImportField;
  ORr.GPProc = StringToVal(ImportField,M41Val);
  ORr.DespatchDate = StringToDate(ImportField);
  ORr.DespatchTime = StringToTime(ImportField);
  ORr.SalesGroup = ImportField;
  ORr.Sorting = ImportField;
  ORr.TotQty = StringToVal(ImportField,M4Qty);
  ORr.TotWeight = StringToVal(ImportField,M4Qty);
  ORr.TotVolume = StringToVal(ImportField,M4Qty);
  ORr.Commision = StringToVal(ImportField,M4Val);
  ORr.SumIncCom = StringToVal(ImportField,M4Val);
  ORr.FrPrice = StringToVal(ImportField,M4Val);
  ORr.FrBase = StringToVal(ImportField,M4Val);
  ORr.FrItem = ImportField;
  ORr.FrVATCode = ImportField;
  ORr.FrObjects = ImportField;
  ORr.InvAddr3 = ImportField;
  ORr.InvAddr4 = ImportField;
  ORr.DelAddr3 = ImportField;
  ORr.DelAddr4 = ImportField;
  ORr.DelAddrCode = ImportField;
  ORr.TAX1Sum = StringToVal(ImportField,M4Val);
  ORr.QuoteNr = StringToLongint(ImportField);
  ORr.InvBeforeShip = StringToInt(ImportField);
  ORr.colnr = StringToInt(ImportField);
  ORr.OKFlag = StringToInt(ImportField);
  ORr.PlanShipDate = StringToDate(ImportField);
  ORr.PrepaidAmount = StringToVal(ImportField,M4Val);
  ORr.Region = ImportField;
  ORr.RefStr = ImportField;
  ORr.GroupOrdNr = StringToLongint(ImportField);
  ORr.NoDelivery = StringToInt(ImportField);
  ORr.NoInvoice = StringToInt(ImportField);
  ORr.TAX2Sum = StringToVal(ImportField,M4Val);
  ORr.NoTax1 = StringToInt(ImportField);
  ORr.NoTax2 = StringToInt(ImportField);
  ORr.BranchID = ImportField;
  ORr.NoTAXonVAT = StringToLongint(ImportField);
  ORr.TotalwoTAX = StringToInt(ImportField);
  ORr.OrderType = StringToInt(ImportField);
  ORr.AcceptanceStatus = StringToInt(ImportField);
  ORr.CustTaxTemplateCode = ImportField;
  ImportPackedMatrix(TMr);
  PackFieldMatrix(ORr,"TaxMatrix",TMr);
  ORr.TerminalID = ImportField;
  ORr.OfficialSerNr = ImportField;
  ORr.Hash = ImportField;
  ORr.HashKeyVersion = StringToInt(ImportField);
  ORr.RegDate = StringToDate(ImportField);
  ORr.RegTime = StringToTime(ImportField);
  ORr.LocalMachineCode = ImportField;
  ORr.InvCountry = ImportField;
  ORr.DelCountry = ImportField;
  ORr.TREONr = StringToLongint(ImportField);
  ORr.TREOExpDate = StringToDate(ImportField);
  ORr.ORCONr = StringToLongint(ImportField);
  ORr.AcceptanceBy = ImportField;
  ORr.AcceptanceFYI = ImportField;
  ORr.BankCode = ImportField;
  ORr.InvCountryName = ImportField;
  ORr.DelCountryName = ImportField;
  ORr.OfficialSerNrSerie = ImportField;
  ORr.RecipientGLN = ImportField;
  ORr.DelRecipientGLN = ImportField;
  ORr.IntrastatTransCode = ImportField;
  ORr.ReservToDate = StringToDate(ImportField);
  ORr.ShopsMark = StringToInt(ImportField);
  ORr.RahSplatNom = ImportField;
  ORr.DogPostNom = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(ORr,ORrw,1);
    ORrw.stp = StringToInt(ImportField);
    ORrw.ArtCode = ImportField;
    ORrw.Quant = StringToVal(ImportField,M4UVal);
    ORrw.Price = StringToVal(ImportField,M423Val);
    ORrw.Sum = StringToVal(ImportField,M4Val);
    ORrw.vRebate = StringToVal(ImportField,M41Val);
    ORrw.SalesAcc = ImportField;
    ORrw.Shipd1 = StringToVal(ImportField,M4UVal);
    ORrw.Shipd2 = StringToVal(ImportField,M4UVal);
    ORrw.Invd = StringToVal(ImportField,M4UVal);
    ORrw.Objects = ImportField;
    ORrw.BasePrice = StringToVal(ImportField,M423Val);
    ORrw.rowGP = StringToVal(ImportField,M4Val);
    ORrw.Spec = ImportField;
    ORrw.VATCode = ImportField;
    ORrw.Recepy = ImportField;
    ORrw.SerialNr = ImportField;
    ORrw.PriceFactor = StringToVal(ImportField,M45Val);
    ORrw.VARList = ImportField;
    ORrw.Location = ImportField;
    ORrw.Source = ImportField;
    ORrw.PickingDate = StringToDate(ImportField);
    ORrw.PickingTime = ImportField;
    ORrw.InloadingDate = StringToDate(ImportField);
    ORrw.InloadingTime = ImportField;
    ORrw.DespatchRowDate = StringToDate(ImportField);
    ORrw.DespatchRowTime = ImportField;
    ORrw.PlanShipRow = ImportField;
    ORrw.ShipNote = ImportField;
    ORrw.UnitCode = ImportField;
    ORrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
    ORrw.UnitFactPrice = StringToVal(ImportField,M423Val);
    ORrw.UnitXval = StringToVal(ImportField,M4UVal);
    ORrw.UnitYval = StringToVal(ImportField,M4UVal);
    ORrw.UnitZval = StringToVal(ImportField,M4UVal);
    ORrw.Coefficient = StringToVal(ImportField,M45Val);
    ORrw.VECode = ImportField;
    ORrw.Production = ImportField;
    ORrw.GroupOrdRow = StringToLongint(ImportField);
    ORrw.TAX2Code = ImportField;
    ORrw.TAX2Prc = StringToVal(ImportField,M423Val);
    ORrw.TAX2Reb = StringToVal(ImportField,M4Val);
    ORrw.TAX1Reb = StringToVal(ImportField,M4Val);
    ORrw.TAX2Acc = ImportField;
    ORrw.PlanShipRowDate = StringToDate(ImportField);
    ORrw.CUServiceHistNr = StringToLongint(ImportField);
    ORrw.CUServiceUntilDate = StringToDate(ImportField);
    ORrw.Position = ImportField;
    ORrw.RowOrderType = StringToInt(ImportField);
    ORrw.TaxTemplateCode = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(ORrw,"TaxMatrix",TMr);
    ORrw.Region = ImportField;
    ORrw.Perceptions = StringToInt(ImportField);
    ORrw.MotherArtCode = ImportField;
    ORrw.RecipeQuant = StringToVal(ImportField,M4Qty);
    ORrw.CustArtCode = ImportField;
    ORrw.Salesmen = ImportField;
    ORrw.OrderType = StringToInt(ImportField);
    ORrw.UnitComment = ImportField;
    ORrw.Shopd = StringToVal(ImportField,M4UVal);
    MatRowPut(ORr,rwcnt,ORrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagORVc2(string thetag)
begin
  record ORVc ORr;
  
  while (NextImportLine(false)) begin
    ReadImportTagORVc2Record(ORr);
    //logtext(0,currentcompany & "  " & thetag); 
    RecordImportStore(ORr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrORVc2(Integer compnr,string thetag)
begin
  record ORVc ORr;
  
  ORr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrORVc2 = BuildRecordIdStr(ORr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:48:03// Edit ************************** Thursday, 5 October 2017 16:48:04
procedure ReadImportTagSVOVcRecord(record SVOVc SVOr)
begin
  string 255 tstr;
  row SVOVc SVOrw;
  integer rwcnt;
  
  RecordNew(SVOr);
  SVOr.SerNr = StringToLongint(ImportField);
  SVOr.TransDate = StringToDate(ImportField);
  SVOr.PlanShip = ImportField;
  SVOr.CustCode = ImportField;
  SVOr.Addr0 = ImportField;
  SVOr.Addr1 = ImportField;
  SVOr.Addr2 = ImportField;
  SVOr.Addr3 = ImportField;
  SVOr.OurContact = ImportField;
  SVOr.CustContact = ImportField;
  SVOr.ExportFlag = StringToInt(ImportField);
  SVOr.PayDeal = ImportField;
  SVOr.Objects = ImportField;
  SVOr.ShipMode = ImportField;
  SVOr.Sign = ImportField;
  SVOr.ShipDeal = ImportField;
  SVOr.ShipAddr0 = ImportField;
  SVOr.ShipAddr1 = ImportField;
  SVOr.ShipAddr2 = ImportField;
  SVOr.ShipAddr3 = ImportField;
  SVOr.LangCode = ImportField;
  SVOr.InvoiceToCode = ImportField;
  SVOr.Comment1 = ImportField;
  SVOr.Comment2 = ImportField;
  SVOr.Comment3 = ImportField;
  SVOr.Comment4 = ImportField;
  SVOr.OrderClass = ImportField;
  SVOr.CustOrdNr = ImportField;
  SVOr.InclVAT = StringToInt(ImportField);
  SVOr.TotCost = StringToVal(ImportField,M4Val);
  SVOr.TotPrice = StringToVal(ImportField,M4Val);
  SVOr.CustVATCode = ImportField;
  SVOr.VATNr = ImportField;
  SVOr.Phone = ImportField;
  SVOr.Fax = ImportField;
  SVOr.DoneMark = StringToInt(ImportField);
  SVOr.InvFlag = StringToInt(ImportField);
  SVOr.InvMark = StringToInt(ImportField);
  SVOr.SalesMan = ImportField;
  SVOr.CustCat = ImportField;
  SVOr.PriceList = ImportField;
  SVOr.RebCode = ImportField;
  SVOr.WOMark = StringToInt(ImportField);
  SVOr.WSMark = StringToInt(ImportField);
  SVOr.InvAddr3 = ImportField;
  SVOr.InvAddr4 = ImportField;
  SVOr.DelAddr3 = ImportField;
  SVOr.DelAddr4 = ImportField;
  SVOr.SalesGroup = ImportField;
  SVOr.CurncyCode = ImportField;
  SVOr.FrRate = StringToVal(ImportField,M4Rate);
  SVOr.ToRateB1 = StringToVal(ImportField,M4Rate);
  SVOr.ToRateB2 = StringToVal(ImportField,M4Rate);
  SVOr.BaseRate1 = StringToVal(ImportField,M4Rate);
  SVOr.BaseRate2 = StringToVal(ImportField,M4Rate);
  SVOr.QualConSerNr = StringToLongint(ImportField);
  SVOr.PlanShipDate = StringToDate(ImportField);
  SVOr.DelAddrCode = ImportField;
  SVOr.Region = ImportField;
  SVOr.BranchID = ImportField;
  SVOr.ServLocation = ImportField;
  SVOr.RegDate = StringToDate(ImportField);
  SVOr.RegTime = StringToTime(ImportField);
  SVOr.ConfirmationNo = ImportField;
  SVOr.CustComplaint1 = ImportField;
  SVOr.CustComplaint2 = ImportField;
  SVOr.CustComplaint3 = ImportField;
  SVOr.CustComplaint4 = ImportField;
  SVOr.TechComment1 = ImportField;
  SVOr.TechComment2 = ImportField;
  SVOr.TechComment3 = ImportField;
  SVOr.TechComment4 = ImportField;
  SVOr.Note1 = ImportField;
  SVOr.Note2 = ImportField;
  SVOr.Note3 = ImportField;
  SVOr.Note4 = ImportField;
  SVOr.TechnicianID = ImportField;
  SVOr.SupplierReviewFlag = StringToInt(ImportField);
  SVOr.InvCountry = ImportField;
  SVOr.DelCountry = ImportField;
  SVOr.CustTaxTemplateCode = ImportField;
  SVOr.RecipientGLN = ImportField;
  SVOr.DelRecipientGLN = ImportField;
  SVOr.Vlastnik = ImportField;
  SVOr.Priynato = ImportField;
  SVOr.Kontinfo1 = ImportField;
  SVOr.Kontinfo2 = ImportField;
  SVOr.Kontinfo3 = ImportField;
  SVOr.Batary = ImportField;
  SVOr.Zaryadka = ImportField;
  SVOr.Scarga = ImportField;
  SVOr.Inshe = ImportField;
  SVOr.Defects = ImportField;
  SVOr.Garanty = ImportField;
  SVOr.GarNo = ImportField;
  SVOr.GarDate = ImportField;
  SVOr.CustomField1 = ImportField;
  SVOr.CustomField2 = ImportField;
  SVOr.CustomField3 = ImportField;
  SVOr.CustomField4 = ImportField;
  SVOr.CustomField5 = ImportField;
  SVOr.CustomField6 = ImportField;
  SVOr.CustomField7 = ImportField;
  SVOr.CustomField8 = ImportField;
  SVOr.CustomField9 = ImportField;
  SVOr.CustomField10 = ImportField;
  SVOr.CustomField11 = ImportField;
  SVOr.CustomField12 = ImportField;
  SVOr.CustomField13 = ImportField;
  SVOr.CustomField14 = ImportField;
  SVOr.ServiceManager = ImportField;
  SVOr.OrderStatus = StringToInt(ImportField);
  SVOr.VIPStatus = StringToInt(ImportField);
  SVOr.ItemName = ImportField;
  SVOr.ItemFrPartner = StringToInt(ImportField);
  SVOr.WSCost = StringToVal(ImportField,M4Val);
  SVOr.DoneTime = StringToTime(ImportField);
  SVOr.OutTime = StringToTime(ImportField);
  SVOr.EndDiagnDate = StringToDate(ImportField);
  SVOr.EndDiagnTime = StringToTime(ImportField);
  SVOr.NoSMS = StringToInt(ImportField);
  SVOr.FastCash = StringToVal(ImportField,M4Val);
  SVOr.FastTerm = StringToVal(ImportField,M4Val);
  SVOr.Phone2 = ImportField;
  SVOr.ArtCodeTextSearch = ImportField;
  SVOr.SpecTextSearch = ImportField;
  SVOr.SerialNrTextSearch = ImportField;
  SVOr.OldPhone = ImportField;
  SVOr.Name = ImportField;
  SVOr.MiddleName = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(SVOr,SVOrw,1);
    SVOrw.stp = StringToInt(ImportField);
    SVOrw.ArtCode = ImportField;
    SVOrw.Quant = StringToVal(ImportField,M4UVal);
    SVOrw.Cost = StringToVal(ImportField,M423Val);
    SVOrw.Price = StringToVal(ImportField,M4Val);
    SVOrw.SalesAcc = ImportField;
    SVOrw.WOSerNr = StringToLongint(ImportField);
    SVOrw.WOEnum = StringToLongint(ImportField);
    SVOrw.Objects = ImportField;
    SVOrw.Spec = ImportField;
    SVOrw.VATCode = ImportField;
    SVOrw.SerialNr = ImportField;
    SVOrw.WOMade = StringToVal(ImportField,M4UVal);
    SVOrw.Invd = StringToVal(ImportField,M4UVal);
    SVOrw.MaxCost = StringToVal(ImportField,M423Val);
    SVOrw.ItemType = StringToInt(ImportField);
    SVOrw.PlanShiprw = ImportField;
    SVOrw.StandProblem = ImportField;
    SVOrw.MotherNr = ImportField;
    SVOrw.ContractNr = StringToLongint(ImportField);
    SVOrw.ItemKind = StringToInt(ImportField);
    SVOrw.StdProblemMod = ImportField;
    SVOrw.DiagnosticCode = ImportField;
    SVOrw.TaxTemplateCode = ImportField;
    SVOrw.SecondarySerialNr = ImportField;
    SVOrw.AlternateDeviceID = ImportField;
    SVOrw.MotherSecondarySerialNr = ImportField;
    SVOrw.MotherAlternateDeviceID = ImportField;
    MatRowPut(SVOr,rwcnt,SVOrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagSVOVc(string thetag)
begin
  record SVOVc SVOr;
  
  while (NextImportLine(false)) begin
    ReadImportTagSVOVcRecord(SVOr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(SVOr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrSVOVc(Integer compnr,string thetag)
begin
  record SVOVc SVOr;
  
  SVOr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrSVOVc = BuildRecordIdStr(SVOr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:53:31
// Edit ************************** Thursday, 5 October 2017 16:53:33// Edit ************************** Thursday, 5 October 2017 16:53:34
procedure ReadImportTagartikel5Record(record INVc INr)
begin
  string 255 tstr;
  row INVc INrw;
  integer rwcnt;
  
  RecordNew(INr);
  //logtext(0,11111);
  //INr.UUID = StringToUUID(ImportField); // NewAutosyncRegister
  ImportField;
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  INr.Code = ImportField;
  //logtext(0,"Code " & INr.Code);
  INr.Name = ImportField;
  //logtext(0,"Name " & INr.Name);
  INr.Unittext = ImportField;
  //logtext(0,"Unittext " & INr.Unittext);
  INr.MinLevel = StringToVal(ImportField,M4Qty);
  //logtext(0,"MinLevel " & INr.MinLevel);
  INr.Objects = ImportField;
  //logtext(0,"Objects " & INr.Objects);
  INr.SalesAcc = ImportField;
  //logtext(0,"SalesAcc " & INr.SalesAcc);
  INr.UPrice1 = StringToVal(ImportField,M423Val);
  //logtext(0,"UPrice1 " & INr.UPrice1);
  INr.ItemType = StringToInt(ImportField);
  //logtext(0,"ItemType " & INr.ItemType);
  INr.Group = ImportField;
  //logtext(0,"Group " & INr.Group);
  //INr.x1 = 
  ImportField;
  //logtext(0,"x1 " & INr.x1);
  //INr.x2 =
  ImportField;
  //logtext(0,"x2 " & INr.x2);
  INr.InPrice = StringToVal(ImportField,M45Val);
  //logtext(0,"InPrice " & INr.InPrice);
  INr.InvCode = ImportField;
  //logtext(0,"InvCode " & INr.InvCode);
  INr.ExtraCost = StringToVal(ImportField,M4Val);
  //logtext(0,"ExtraCost " & INr.ExtraCost);
  INr.SerNrf = StringToInt(ImportField);
  //logtext(0,"SerNrf " & INr.SerNrf);
  INr.Department = ImportField;
  //logtext(0,"Department " & INr.Department);
  INr.Weight = StringToVal(ImportField,M45Val);
  //logtext(0,"Weight " & INr.Weight);
  INr.Volume = StringToVal(ImportField,M45Val);
  //logtext(0,"Volume " & INr.Volume);
  INr.EUCodex = ImportField;
  //logtext(0,"EUCodex " & INr.EUCodex);
  INr.InCurncyCode = ImportField;
  //logtext(0,"InCurncyCode " & INr.InCurncyCode);
  INr.Bonus = StringToVal(ImportField,M4Qty);
  INr.Recepy = ImportField;
  INr.Markup = StringToVal(ImportField,M4Qty);
  //INr.x3 = 
  ImportField;
  INr.BarCode = ImportField;
  INr.UpdateCost = StringToInt(ImportField);
  INr.LastPriceChange = StringToDate(ImportField);
  INr.CalcPrice = ImportField;
  INr.VATCode = ImportField;
  INr.PriceFactor = StringToVal(ImportField,M45Val);
  INr.Terminated = StringToInt(ImportField);
  INr.AvgMarkup = StringToVal(ImportField,M4Val);
  //logtext(0,"Density " & INr.AvgMarkup);
  INr.LastPurchPrice = StringToVal(ImportField,M45Val);
  INr.LastPurchCurncyCode = ImportField;
  INr.WeighedAvPrice = StringToVal(ImportField,M45Val);
  INr.Conversion1 = StringToVal(ImportField,M45Val);
  INr.Conversion2 = StringToVal(ImportField,M45Val);
  INr.WarrantyLength = StringToVal(ImportField,M4Qty);
  INr.InvRecepy = ImportField;
  INr.EUSalesAcc = ImportField;
  INr.ExpSalesAcc = ImportField;
  INr.VATCodeEU = ImportField;
  INr.VATCodeExp = ImportField;
  INr.ChangePrice = StringToInt(ImportField);
  INr.RebCode = ImportField;
  INr.ExplodeRec = StringToInt(ImportField);
  INr.Unittext2 = ImportField;
  INr.UnitCoefficient = StringToVal(ImportField,M45Val);
  INr.WarnText1 = ImportField;
  INr.VARList = ImportField;
  //logtext(0,"Density " & INr.VARList);
  INr.ItemMaterial = StringToInt(ImportField);
  INr.AlcPrc = StringToVal(ImportField,M4UVal);
  INr.DefaultSource = ImportField;
  INr.AlternativeCode = ImportField;
  INr.CostAcc = ImportField;
  INr.DefLocation = ImportField;
  INr.LastBasePriceChange = StringToDate(ImportField);
  INr.MaxLevel = StringToVal(ImportField,M4Qty);
  INr.LastPurchPrice2 = StringToVal(ImportField,M45Val);
  INr.Width = StringToVal(ImportField,M4UVal);
  INr.Height = StringToVal(ImportField,M4UVal);
  INr.Depth = StringToVal(ImportField,M4UVal);
  INr.ContractItem = ImportField;
  INr.Internal = StringToInt(ImportField);
  INr.InclItemFreight = StringToInt(ImportField);
  INr.FixedFreight = StringToVal(ImportField,M4Val);
  INr.DispGroups = ImportField;
  INr.HazLevCode = ImportField;
  INr.Density = StringToVal(ImportField,M45Val);
  //logtext(0,"Density " & INr.Density);
  INr.xClassification = ImportField;
  INr.CredSalesAcc = ImportField;
  INr.CredEUSalesAcc = ImportField;
  INr.CredExpSalesAcc = ImportField;
  INr.CredVATCode = ImportField;
  INr.CredVATCodeEU = ImportField;
  INr.CredVATCodeExp = ImportField;
  INr.RentalItem = ImportField;
  INr.CompUsage = ImportField;
  INr.colnr = StringToInt(ImportField);
  INr.VARMask = ImportField;
  INr.VARRepOrder = ImportField;
  INr.VARSubsets = ImportField;
  INr.LocArea = ImportField;
  INr.EKNCode = ImportField;
  INr.DefPalletItem = ImportField;
  INr.QtyonPallet = StringToVal(ImportField,M4UVal);
  INr.PalletWidth = StringToVal(ImportField,M4UVal);
  INr.PalletHeight = StringToVal(ImportField,M4UVal);
  INr.PalletDepth = StringToVal(ImportField,M4UVal);
  INr.Brand = ImportField;
  INr.BrandType = ImportField;
  INr.PickArea = ImportField;
  INr.SWWCode = ImportField;
  INr.RepaPricePerWeight = StringToVal(ImportField,M4Val);
  INr.PalletsInPickArea = StringToVal(ImportField,M4UVal);
  INr.DefPosWidth = StringToVal(ImportField,M4UVal);
  INr.DefPosHeight = StringToVal(ImportField,M4UVal);
  INr.DefPosDepth = StringToVal(ImportField,M4UVal);
  INr.InPriceB2 = StringToVal(ImportField,M45Val);
  INr.WeighedAvPriceB2 = StringToVal(ImportField,M45Val);
  INr.EUCostAcc = ImportField;
  INr.ExpCostAcc = ImportField;
  INr.PalletLayers = StringToVal(ImportField,M4UVal);
  INr.QtyonPalletLayer = StringToVal(ImportField,M4UVal);
  //logtext(0,"DefOrderType " & INr.QtyonPalletLayer);
  INr.UserStr1 = ImportField;
  INr.UserStr2 = ImportField;
  INr.UserStr3 = ImportField;
  INr.UserStr4 = ImportField;
  INr.UserStr5 = ImportField;
  INr.UserVal1 = StringToVal(ImportField,M4UVal);
  INr.UserVal2 = StringToVal(ImportField,M4UVal);
  INr.UserVal3 = StringToVal(ImportField,M4UVal);
  INr.UserDate1 = StringToDate(ImportField);
  INr.UserDate2 = StringToDate(ImportField);
  INr.UserDate3 = StringToDate(ImportField);
  INr.RentGroup = ImportField;
  //logtext(0,"DefOrderType " & INr.RentGroup);
  INr.FAGroup = ImportField;
  INr.NetWeight = StringToVal(ImportField,M45Val);
  INr.PrimaryCostModel = StringToInt(ImportField);
  INr.QueuedCostModel = StringToInt(ImportField);
  INr.CostPerc = StringToVal(ImportField,M4Val);
  INr.FIFOPerSerialNr = StringToInt(ImportField);
  INr.FIFOPerLocation = StringToInt(ImportField);
  INr.WAPerLocation = StringToInt(ImportField);
  INr.CostPricePerLocation = StringToInt(ImportField);
  INr.NotForSales = StringToInt(ImportField);
  INr.SRUpdateCost = StringToInt(ImportField);
  INr.SuppSerialNr = ImportField;
  INr.MajStoneDet = ImportField;
  INr.Colour = ImportField;
  INr.Clarity = ImportField;
  INr.Cert = ImportField;
  INr.MinStoneDet = ImportField;
  INr.Metal = ImportField;
  INr.RowWeight = ImportField;
  INr.Size = ImportField;
  INr.Length = ImportField;
  INr.WatchBrand = ImportField;
  INr.StyleName = ImportField;
  INr.WatchMetal = ImportField;
  INr.Movement = ImportField;
  INr.BrcStr = ImportField;
  INr.Gender = ImportField;
  //logtext(0,"DefOrderType " & INr.Gender);
  INr.Other = ImportField;
  INr.Other2 = ImportField;
  INr.Reference = ImportField;
  INr.Perceptions = StringToInt(ImportField);
  INr.Withholdings = StringToInt(ImportField);
  INr.TaxTemplateCode = ImportField;
  INr.TaxTemplateCodeEU = ImportField;
  INr.TaxTemplateCodeExp = ImportField;
  INr.DonotRequireBatchNrOnIVCash = StringToInt(ImportField);
  INr.HotelWIPAcc = ImportField;
  INr.CPSCode = ImportField;
  INr.SVOInvbleSalesAcc = ImportField;
  INr.SVOWarrantySalesAcc = ImportField;
  INr.SVOContractSalesAcc = ImportField;
  INr.SVOGoodwillSalesAcc = ImportField;
  INr.SVOInvbleCostAcc = ImportField;
  INr.SVOWarrantyCostAcc = ImportField;
  INr.SVOContractCostAcc = ImportField;
  INr.SVOGoodwillCostAcc = ImportField;
  INr.HasExcise = StringToInt(ImportField);
  INr.ProjMaterialsUsageAcc = ImportField;
  INr.DefOrderType = StringToInt(ImportField);
  //logtext(0,"DefOrderType " & INr.DefOrderType);
  /*INr.GigieneText1 = ImportField;
  INr.GigieneText2 = ImportField;
  INr.GigieneText3 = ImportField;
  INr.GigieneText4 = ImportField;
  INr.GigieneText5 = ImportField;
  INr.GigieneText6 = ImportField;
  INr.GigieneText7 = ImportField;
  INr.GigieneText8 = ImportField;
  INr.GigieneText9 = ImportField;
  INr.GigieneText10 = ImportField;
  INr.GigieneText11 = ImportField;
  INr.GigieneText12 = ImportField;
  INr.GigieneText13 = ImportField;
  INr.GigieneText14 = ImportField;
  INr.GigieneText15 = ImportField;
  INr.GigieneText16 = ImportField;
  INr.GigieneText17 = ImportField;
  INr.GigieneText18 = ImportField;
  INr.GigieneText19 = ImportField;
  INr.GigieneText20 = ImportField;
  INr.LPriceList = ImportField;
  INr.LName = ImportField;
  INr.LDefFormCode = ImportField;
  INr.LComment = ImportField;
  INr.LCurncyCode = ImportField;
  INr.LSize = StringToInt(ImportField);
  INr.LCust1 = ImportField;
  INr.LCust2 = ImportField;
  INr.LCust3 = ImportField;
  INr.LCust4 = ImportField;
  INr.LCust5 = ImportField;
  INr.LCustInt1 = StringToInt(ImportField);
  INr.LCustInt2 = StringToInt(ImportField);
  INr.LCustInt3 = StringToInt(ImportField);
  INr.LCustInt4 = StringToInt(ImportField);
  INr.LCustInt5 = StringToInt(ImportField);*/
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(INr,INrw,1);
    //logtext(0,22222);
    INrw.LangCode = ImportField;
    INrw.Text = ImportField;
    //logtext(0,"Text " & INrw.Text);
    /*INrw.LParam = ImportField;
    INrw.LName = ImportField;
    INrw.LComment1 = ImportField;
    INrw.LComment2 = ImportField;
    INrw.LComment3 = ImportField;
    INrw.LComment4 = ImportField;
    INrw.LComment5 = ImportField;
    INrw.LComment6 = ImportField;
    INrw.LComment7 = ImportField;
    INrw.LComment8 = ImportField;
    INrw.LArInt1 = StringToInt(ImportField);
    INrw.LArInt2 = StringToInt(ImportField);
    INrw.LArInt3 = StringToInt(ImportField);
    INrw.LArInt4 = StringToInt(ImportField);*/
    MatRowPut(INr,rwcnt,INrw);
    //logtext(0,"rwcnt" & rwcnt);
    rwcnt = rwcnt + 1;
  end;
  /*
  while (NextImportLine(false)) begin
    tstr = ImportField;
    if nonblank(tstr) then begin
      AddToText(tstr,INr);
      if (ImportIntoText(INr)) then begin
      end;
    end;
  end;
  */
  return;
end;

global
updating procedure ReadImportTagartikel5(string thetag)
begin
  record INVc INr;
  
  while (NextImportLine(false)) begin
    ReadImportTagartikel5Record(INr);
    //logtext(0,currentcompany & "  " & INr.Code); 
 RecordImportStore(INr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrartikel5(Integer compnr,string thetag)
begin
  record INVc INr;
  
  INr.Code = ImportField;
  ReadRecordIdStrartikel5 = BuildRecordIdStr(INr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 17:54:46// Edit ************************** Thursday, 5 October 2017 17:54:47

procedure ReadImportTagCCatVc2Record(record CCatVc CCatr)
begin
  string 255 tstr;
  RecordNew(CCatr);
  
  CCatr.UUID = StringToUUID(ImportField); // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  CCatr.Code = ImportField;
  CCatr.Comment = ImportField;
  CCatr.PLCode = ImportField;
  CCatr.ARAcc = ImportField;
  CCatr.RebCode = ImportField;
  CCatr.ComCode = ImportField;
  CCatr.OnAccAcc = ImportField;
  CCatr.DownPayPerc = StringToVal(ImportField,M4Qty);
  CCatr.WebOrderClass = ImportField;
  CCatr.MainDispGroup = ImportField;
  CCatr.WebDisplays = ImportField;
  CCatr.BadARAcc = ImportField;
  CCatr.AccAP = ImportField;
  CCatr.RetainAcc = ImportField;
  CCatr.OnAccAccAP = ImportField;
  CCatr.ClassType = ImportField;
  CCatr.CostAcc = ImportField;
  CCatr.RetCostAcc = ImportField;
  
  return;
end;

global
updating procedure ReadImportTagCCatVc2(string thetag)
begin
  record CCatVc CCatr;
  
  while (NextImportLine(false)) begin
    ReadImportTagCCatVc2Record(CCatr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(CCatr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrCCatVc2(Integer compnr,string thetag)
begin
  record CCatVc CCatr;
  
  CCatr.Code = ImportField;
  ReadRecordIdStrCCatVc2 = BuildRecordIdStr(CCatr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:56:53// Edit ************************** Thursday, 5 October 2017 16:56:57
procedure ReadImportTagSalesGroupVcRecord(record SalesGroupVc SalesGroupr)
begin
  string 255 tstr;
  RecordNew(SalesGroupr);
  SalesGroupr.SGroupCode = ImportField;
  SalesGroupr.SGroupName = ImportField;
  SalesGroupr.SGroupSeries = StringToLongint(ImportField);
  
  return;
end;

global
updating procedure ReadImportTagSalesGroupVc(string thetag)
begin
  record SalesGroupVc SalesGroupr;
  
  while (NextImportLine(false)) begin
    ReadImportTagSalesGroupVcRecord(SalesGroupr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(SalesGroupr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrSalesGroupVc(Integer compnr,string thetag)
begin
  record SalesGroupVc SalesGroupr;
  
  SalesGroupr.SGroupCode = ImportField;
  ReadRecordIdStrSalesGroupVc = BuildRecordIdStr(SalesGroupr,compnr);
  return;
end;

// Edit ************************** Thursday, 5 October 2017 16:57:00// Edit ************************** Thursday, 5 October 2017 16:57:00// Edit ************************** Thursday, 5 October 2017 16:57:01

RecordBegin(PUVc,-,"purchase2");
  RecordField(SerNr,M4Long,0,0);
  SerialNoBlock(PUSerBlock);
  RecordField(RegDate,M4Date,0,0);
  RecordField(TransDate,M4Date,0,0);
  FieldIsTransDate(TransDate);
  RecordField(Comment,M4Str,60,0);
  RecordField(Math,M4Matrix,0,0);
  RecordField(VECode,M4Code,20,VEVc);
  RecordField(VEName,M4Str,60,0);
  RecordField(PONr,M4Long,0,POVc);
  RecordField(Location,M4Code,10,LocationVc);
  FieldIsLocation(Location);
  RecordField(OKFlag,M4Mark,0,0);
  RecordField(CurncyCode,M4Code,5,CurncyCodeVc);
  RecordField(ToRateB1,M4Rate,0,0);
  RecordField(InclVAT,M4Int,0,0);
  RecordField(SumCostPrice,M45Val,0,0);
  RecordField(SumQuant,M4Qty,0,0);
  RecordField(ShipCost,M4UVal,0,0);
  RecordField(CustomsCost,M4UVal,0,0);
  RecordField(ExtraCost,M4UVal,0,0);
  RecordField(ExportedFlag,M4Int,0,0);
  RecordField(FrRate,M4Rate,0,0); 
  RecordField(ToRateB2,M4Rate,0,0); 
  RecordField(BaseRate1,M4Rate,0,0); 
  RecordField(BaseRate2,M4Rate,0,0); 
  RecordField(LocOKNr,M4Qty,0,0);
  RecordField(Objects,M4UStr,60,ObjVc);
  RecordField(PUClass,M4Code,10,0);
  RecordField(POCOSerNr,M4Long,0,0);
  RecordField(Cost1,M4UVal,0,0);
  RecordField(Cost2,M4UVal,0,0);
  RecordField(Cost3,M4UVal,0,0);
  RecordField(Cost4,M4UVal,0,0);
  RecordField(Cost5,M4UVal,0,0);
  RecordField(VATVal,M4Val,0,0);
  RecordField(SubTotal,M4Val,0,0);
  RecordField(PayVal,M4Val,0,0);
  RecordField(VEVATCode,M4Code,10,VATCodeBlock);
  RecordField(Invalid,M4Int,0,0);
  FieldIsInvalid(Invalid);
  RecordField(ExportFlag,M4Int,0,0);
  RecordField(PrelPUNr,M4Long,0,0);
  RecordField(FreightCode,M4Code,5,0);
  RecordField(FreightCompanyRegNr,M4Str,60,0);
  RecordField(FreightCompany,M4Str,60,0);
  RecordField(TruckInfo,M4Str,60,0);
  RecordField(Driver,M4Str,60,0);
  RecordField(CMRText,M4Str,60,0);
  RecordField(xBookVariance,M4Mark,0,0);//not used
  RecordField(xVarTransDate,M4Date,0,0);//not used
  RecordField(LangCode,M4Code,5,0);   
  RecordField(TAX1Sum,M4Val,0,0);
  RecordField(TAX2Sum,M4Val,0,0);
  RecordField(ShipCostRound,M4UVal,0,0);
  RecordField(CustomsCostRound,M4UVal,0,0);
  RecordField(Cost1Round,M4UVal,0,0);
  RecordField(Cost2Round,M4UVal,0,0);
  RecordField(Cost3Round,M4UVal,0,0);
  RecordField(Cost4Round,M4UVal,0,0);
  RecordField(Cost5Round,M4UVal,0,0);
  RecordField(Sorting,M4Str,20,0);
  RecordField(InvalidDate,M4Date,0,0);
  RecordField(NoTAXonVAT,M4Long,0,0);
  RecordField(AcceptanceStatus,M4Set,443,0);
  RecordField(PUFromPORate,M4Set,460,0);
  RecordField(TotUPrice,M4Val,0,0);
  RecordField(VETaxTemplateCode,M4Code,10,TaxTemplateVc);
  RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
  RecordField(BranchID,M4Code,20,VEVc);
  RecordField(AcceptanceBy,M4List,200,UserVc);
  RecordField(ExtraCostsCalculation,M4Int,0,0);
  RecordField(AcceptanceFYI,M4List,200,UserVc);
  RecordField(DispatchNumber,M4Str,60,0);
  RecordField(CustomsNr,M4Str,30,0);
  ArrayBegin(Math,-,1);
  ArrayField(ArtCode,M4Code,20,INVc);
  ArrayField(Quant,M4UVal,0,0);
  ArrayField(Spec,M4Str,100,0);
  ArrayField(UPrice,M45Val,0,0);
  ArrayField(SerialNr,M4Str,30,0);
  ArrayField(OrdRow,M4Long,0,0);
  ArrayField(Extra,M4PrcStr,20,0);
  ArrayField(CostPrice,M45Val,0,0);
  ArrayField(VEItemCode,M4Str,20,0);
  ArrayField(VARList,M4UStr,30,0);
  ArrayField(ShipCost,M45Val,0,0);
  ArrayField(CustomsCost,M4PrcStr,20,0); //!!
  ArrayField(BestBefore,M4Date,0,0);
  ArrayField(Coefficient,M45Val,0,0);
  ArrayField(BasePrice,M423Val,0,0);
  ArrayField(Sum,M45Val,0,0);
  ArrayField(Comment,M4Str,30,0);
  ArrayField(Objects,M4UStr,60,ObjVc);
  ArrayField(CostAcc,M4UStr,10,AccVc);
  ArrayField(CredAcc,M4UStr,10,AccVc);
  ArrayField(CustomsNr,M4Str,30,0);
  ArrayField(CountryOfOrg,M4Code,5,0);
  ArrayField(PosCode,M4Code,20,0);
  ArrayField(BatchStatus,M4Code,20,BatchStatusVc);
  ArrayField(UnitXval,M4UVal,0,0);
  ArrayField(UnitYval,M4UVal,0,0);
  ArrayField(UnitZval,M4UVal,0,0);
  ArrayField(RowCost1,M4UVal,0,0);
  ArrayField(RowCost2,M4UVal,0,0);
  ArrayField(RowCost3,M4UVal,0,0);
  ArrayField(RowCost4,M4UVal,0,0);
  ArrayField(RowCost5,M4UVal,0,0);
  ArrayField(VATCode,M4Code,10,VATCodeBlock);
  ArrayField(stp,M4Int,0,0);
  ArrayField(ovst,M4Int,0,0);
  ArrayField(Sign,M4Code,10,UserVc);
  ArrayField(UpdDate,M4Date,0,0);
  ArrayField(PORecon,M4UVal,0,0);
  ArrayField(POReconComment,M4Str,100,0);
  ArrayField(VIRecon,M4UVal,0,0);
  ArrayField(VIReconComment,M4Str,100,0);
  ArrayField(PONr,M4Long,0,POVc);
  ArrayField(BarCode,M4Str,20,0);//StockMovNr at The Moment
  ArrayField(PrelPUNr,M4Long,0,0);
  ArrayField(PrelPURow,M4Long,0,0);
  ArrayField(ToPosCode,M4Code,20,0);
  ArrayField(UnitCode,M4Code,5,0);
  ArrayField(VarianceAmount,M4Val,0,0);
  ArrayField(TAX2Code,M4Code,5,0);
  ArrayField(TAX2Prc,M423Val,0,0);
  ArrayField(TAX2Reb,M4Val,0,0);
  ArrayField(TAX1Reb,M4Val,0,0);
  ArrayField(TAX2Acc,M4Code,10,AccVc);
  ArrayField(Location,M4Code,10,LocationVc);
  ArrayField(ChargeNumber,M4Long,0,0);
  ArrayField(VEQuant,M4UVal,0,0);
  ArrayField(PIFactor,M4UVal,0,0);
  ArrayField(VEUnit,M4Code,5,0);
  ArrayField(StockType,M4Set,359,0); 
  ArrayField(InPrice,M45Val,0,0);
  ArrayField(SuppSerialNr,M4Str,20,0);
  ArrayField(MajStoneDet,M4Str,20,0);
  ArrayField(Colour,M4Str,20,0);
  ArrayField(Clarity,M4Str,20,0);
  ArrayField(Cert,M4Str,20,0);
  ArrayField(MinStoneDet,M4Str,20,0);
  ArrayField(Metal,M4Str,20,0);
  ArrayField(RowWeight,M4Str,20,0);
  ArrayField(Size,M4Str,20,0);
  ArrayField(Length,M4Str,20,0);
  ArrayField(WatchBrand,M4Str,20,0);
  ArrayField(StyleName,M4Str,20,0);
  ArrayField(WatchMetal,M4Str,20,0);
  ArrayField(Movement,M4Str,20,0);
  ArrayField(BrcStr,M4Str,20,0);
  ArrayField(Gender,M4Str,20,0);
  ArrayField(Other,M4Str,20,0);
  ArrayField(Other2,M4Str,20,0)
  ArrayField(MotherPURow,M4Long,0,0);
  ArrayField(TaxTemplateCode,M4UStr,60,TaxTemplateVc);
  ArrayField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
  ArrayField(TREO,M4Set,509,0);
  ArrayField(DispatchNumber,M4Str,60,0);
  ArrayField(CustomsDate,M4Date,0,0);
  ArrayField(AlternativeCode,M4Str,40,0); //Edit***************************Sasha2,14:27 23.01.2015
  ArrayField(RetailPrice,M45Val,0,0); //Edit***************************Sasha2,15:16 25.01.2016
  EndArray;
  MainKeyBegin(SerNr,0);
  KeySegment(SerNr);
  SynchronizationIndex;
  KeyBegin(ExportedFlag);
  KeySegment(ExportedFlag);
  KeySegment(SerNr);
  KeyBegin(OKFlag);
  KeySegment(OKFlag);
  KeySegment(SerNr);
  KeyBegin(TransDate);
  KeySegment(TransDate);
  KeySegment(SerNr);
  KeyBegin(PONr);
  KeySegment(PONr);
  KeySegment(SerNr);
  KeyBegin(VECode);
  KeySegment(VECode);
  KeySegment(SerNr);
  KeyBegin(Comment);
  KeySegment(Comment);
  KeySegment(SerNr);
  KeyBegin(LocOK);
  KeySegment(Location);
  KeySegment(OKFlag);
  KeySegment(TransDate);  
  KeySegment(SerNr);  
  KeyBegin(Location);
  KeySegment(Location);
  KeySegment(SerNr);
  SubsetKeyBegin2(ToPosCodeSerNr);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(ToPosCode,0);
  KeySegment(SerNr);    
  KeyBegin(xBookVariance);
  KeySegment(xBookVariance);
  KeySegment(SerNr);
  SubsetKeyBegin2(RowPONr);
  StoreInBaseKey;
  AppendMatrixFieldToKeyName(PONr,0);
  KeySegment(SerNr);
  KeyBegin(VEName);
  KeySegment(VEName);
  KeySegment(SerNr);
  KeyBegin(Sorting);
  KeySegment(Sorting);
  KeySegment(SerNr);
  KeyBegin(OKFlagTransDate);
  KeySegment(OKFlag);
  KeySegment(TransDate);  
  KeySegment(SerNr);
  KeyBegin(VECodeTransDate);
  KeySegment(VECode);
  KeySegment(TransDate);
  KeySegment(SerNr);
  EndRecord;
  
  // Edit ************************** Thursday, 5 October 2017 16:57:25// Edit ************************** Thursday, 5 October 2017 16:57:26
  
  procedure ReadImportTaguser2Record(record UserVc Userr)
begin
  string 255 tstr;
  row UserVc Userrw;
  integer rwcnt;
  
  RecordNew(Userr);
  
  Userr.UUID = StringToUUID(ImportField); // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  ImportField; // NewAutosyncRegister
  Userr.Code = ImportField;
  Userr.Name = ImportField;
  Userr.OldPassWord = ImportField;
  Userr.AccessGroup = ImportField;
  Userr.CurOurContact = ImportField;
  Userr.LastOrdNr = StringToLongint(ImportField);
  Userr.LastShipNr = StringToLongint(ImportField);
  Userr.LastInvNr = StringToLongint(ImportField);
  Userr.LastPurNr = StringToLongint(ImportField);
  Userr.LastPayNr = StringToLongint(ImportField);
  Userr.LastTRNr = StringToLongint(ImportField);
  Userr.LastVINr = StringToLongint(ImportField);
  Userr.LastOPNr = StringToLongint(ImportField);
  Userr.TerminatedFlag = StringToInt(ImportField);
  Userr.Job = ImportField;
  Userr.JobGroup = ImportField;
  Userr.DisAllowOther = StringToInt(ImportField);
  Userr.Location = ImportField;
  Userr.Machines = ImportField;
  Userr.Tiller = ImportField;
  Userr.Bonus = StringToVal(ImportField,M4Val);
  Userr.CUCode = ImportField;
  Userr.CUName = ImportField;
  Userr.Phone1 = ImportField;
  Userr.Phone2 = ImportField;
  Userr.Fax1 = ImportField;
  Userr.Fax2 = ImportField;
  Userr.Comment = ImportField;
  Userr.PersAcc = ImportField;
  Userr.PersObjx = ImportField;
  Userr.BankAcc = ImportField;
  Userr.BankName = ImportField;
  Userr.CostPrHour = StringToVal(ImportField,M4Val);
  Userr.PricePrHour = StringToVal(ImportField,M4Val);
  Userr.emailAddr = ImportField;
  Userr.IDCode = ImportField;
  Userr.Spec = ImportField;
  Userr.limitedAccess = StringToInt(ImportField);
  Userr.NewPassWord = ImportField;
  Userr.LangCode = ImportField;
  Userr.SalesGroup = ImportField;
  Userr.Department = ImportField;
  Userr.LastCLInNr = StringToLongint(ImportField);
  Userr.LastCLOutNr = StringToLongint(ImportField);
  Userr.FTPLogin = StringToInt(ImportField);
  Userr.WebConf = ImportField;
  Userr.WebStartPage = ImportField;
  Userr.CostAcc = ImportField;
  Userr.LastIVCashNr = StringToLongint(ImportField);
  Userr.Closed = StringToInt(ImportField);
  Userr.OnlyVoiceLogin = StringToInt(ImportField);
  Userr.UserEditCtlf = StringToInt(ImportField);
  Userr.DateOrder = StringToInt(ImportField);
  Userr.LeadingZDay = StringToInt(ImportField);
  Userr.LeadingZMonth = StringToInt(ImportField);
  Userr.LeadingCentury = StringToInt(ImportField);
  Userr.DateSep = ImportField;
  Userr.DecimalPt = ImportField;
  Userr.ThousandSep = ImportField;
  Userr.ForceTimeEntry = StringToInt(ImportField);
  Userr.DateCreated = StringToDate(ImportField);
  Userr.Supervisor = ImportField;
  Userr.OneFunction = ImportField;
  Userr.TypeOfUser = StringToInt(ImportField);
  Userr.thousSepf = StringToInt(ImportField);
  Userr.CanUseOS = StringToInt(ImportField);
  Userr.Magic = StringToLongint(ImportField);
  Userr.Newf = StringToInt(ImportField);
  Userr.LastTTRNr = StringToLongint(ImportField);
  Userr.CustCode = ImportField;
  Userr.WindowType = StringToInt(ImportField);
  Userr.RegistrationNumber = StringToLongint(ImportField);
  Userr.StartLevel = StringToInt(ImportField);
  Userr.ServLocation = ImportField;
  Userr.ReservLocAccess = ImportField;
  Userr.ReservLocation = ImportField;
  Userr.MinPLCode = ImportField;
  Userr.Magic2 = StringToLongint(ImportField);
  Userr.DiscPassword = ImportField;
  Userr.LastOfficialSerNr = ImportField;
  Userr.LastDropSHNr = StringToLongint(ImportField);
  Userr.PasswordNeverExpires = StringToInt(ImportField);
  Userr.LastRestAccNr = StringToLongint(ImportField);
  Userr.LastPONr = StringToLongint(ImportField);
  Userr.ExpiryDate = StringToDate(ImportField);
  Userr.SortCode = ImportField;
  Userr.ThroughLocation = ImportField;
  Userr.AdditionalLocations = ImportField;
  Userr.ServDays = StringToInt(ImportField);
  Userr.MonthStat = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(Userr,Userrw,1);
    Userrw.Code = ImportField;
    Userrw.PRCode = ImportField;
    Userrw.Comment = ImportField;
    MatRowPut(Userr,rwcnt,Userrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTaguser2(string thetag)
begin
  record UserVc Userr;
  
  while (NextImportLine(false)) begin
    ReadImportTaguser2Record(Userr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(Userr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStruser2(Integer compnr,string thetag)
begin
  record UserVc Userr;
  
  Userr.Code = ImportField;
  ReadRecordIdStruser2 = BuildRecordIdStr(Userr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:58:20// Edit ************************** Thursday, 5 October 2017 16:58:21

procedure ReadImportTagIVVc3Record(record IVVc IVr)
begin
  record TaxMatrixVc TMr;
  string 255 tstr;
  row IVVc IVrw;
  integer rwcnt;
  
  RecordNew(IVr);
  IVr.SerNr = StringToLongint(ImportField);
  IVr.InvDate = StringToDate(ImportField);
  IVr.CustCode = ImportField;
  IVr.PayDate = StringToDate(ImportField);
  IVr.Addr0 = ImportField;
  IVr.Addr1 = ImportField;
  IVr.Addr2 = ImportField;
  IVr.Addr3 = ImportField;
  IVr.OurContact = ImportField;
  IVr.ClientContact = ImportField;
  IVr.ExportFlag = StringToInt(ImportField);
  IVr.PayDeal = ImportField;
  IVr.OrderNr = StringToLongint(ImportField);
  IVr.Prntdf = StringToInt(ImportField);
  IVr.OKFlag = StringToInt(ImportField);
  IVr.pdays = StringToLongint(ImportField);
  IVr.pdvrebt = StringToVal(ImportField,M4Qty);
  IVr.pdrdays = StringToLongint(ImportField);
  IVr.CustCat = ImportField;
  IVr.pdComment = ImportField;
  //IVr.x1 = 
  ImportField;
  IVr.InvType = StringToInt(ImportField);
  IVr.xStatFlag = StringToInt(ImportField);
  IVr.PriceList = ImportField;
  IVr.Objects = ImportField;
  IVr.InclVAT = StringToInt(ImportField);
  IVr.ARAcc = ImportField;
  IVr.InvComment = ImportField;
  IVr.CredInv = StringToLongint(ImportField);
  IVr.CredMark = ImportField;
  IVr.SalesMan = ImportField;
  IVr.ToRateB1 = StringToVal(ImportField,M4Rate);
  IVr.TransDate = StringToDate(ImportField);
  IVr.CurncyCode = ImportField;
  IVr.LangCode = ImportField;
  IVr.UpdStockFlag = StringToInt(ImportField);
  IVr.LastRemndr = StringToLongint(ImportField);
  IVr.LastRemDate = StringToDate(ImportField);
  IVr.Sign = ImportField;
  IVr.FrPrice = StringToVal(ImportField,M4Val);
  IVr.FrBase = StringToVal(ImportField,M4Val);
  IVr.FrItem = ImportField;
  IVr.FrVATCode = ImportField;
  IVr.FrObjects = ImportField;
  IVr.OrgCust = ImportField;
  IVr.FrGP = StringToVal(ImportField,M4Val);
  IVr.FrGPPercent = StringToVal(ImportField,M4Val);
  IVr.Sum0 = StringToVal(ImportField,M4Val);
  IVr.Sum1 = StringToVal(ImportField,M4Val);
  IVr.Sum2 = StringToVal(ImportField,M4Val);
  IVr.Sum3 = StringToVal(ImportField,M4Val);
  IVr.Sum4 = StringToVal(ImportField,M4Val);
  IVr.VATNr = ImportField;
  IVr.ShipDeal = ImportField;
  IVr.ShipAddr0 = ImportField;
  IVr.ShipAddr1 = ImportField;
  IVr.ShipAddr2 = ImportField;
  IVr.ShipAddr3 = ImportField;
  IVr.ShipMode = ImportField;
  IVr.Location = ImportField;
  IVr.PRCode = ImportField;
  IVr.FrSalesAcc = ImportField;
  IVr.TAX1Sum = StringToVal(ImportField,M4Val);
  IVr.CustVATCode = ImportField;
  IVr.RebCode = ImportField;
  IVr.CalcFinRef = ImportField;
  IVr.Phone = ImportField;
  IVr.Fax = ImportField;
  IVr.IntCode = ImportField;
  IVr.ARonTR = StringToInt(ImportField);
  IVr.CustOrdNr = ImportField;
  IVr.ExportedFlag = StringToInt(ImportField);
  IVr.BaseSum4 = StringToVal(ImportField,M4Val);
  IVr.FrRate = StringToVal(ImportField,M4Rate);
  IVr.ToRateB2 = StringToVal(ImportField,M4Rate);
  IVr.BaseRate1 = StringToVal(ImportField,M4Rate);
  IVr.BaseRate2 = StringToVal(ImportField,M4Rate);
  IVr.InvoiceNr = ImportField;
  IVr.DiscPerc = StringToVal(ImportField,M4Qty);
  IVr.DiscSum = StringToVal(ImportField,M4Val);
  IVr.TotGP = StringToVal(ImportField,M4Val);
  IVr.LocOKNr = StringToVal(ImportField,M4Qty);
  IVr.Invalid = StringToInt(ImportField);
  IVr.CreditCard = ImportField;
  IVr.AuthorizationCode = ImportField;
  IVr.RecValue = StringToVal(ImportField,M4Val);
  IVr.RetValue = StringToVal(ImportField,M4Val);
  IVr.FromBUQT = StringToInt(ImportField);
  IVr.Sorting = ImportField;
  IVr.NoInterestFlag = StringToInt(ImportField);
  IVr.NoRemndrFlag = StringToInt(ImportField);
  IVr.SVONr = StringToLongint(ImportField);
  IVr.InstallmentInv = StringToInt(ImportField);
  IVr.OfficialSerNr = ImportField;
  IVr.OfficialSerNr2 = ImportField;
  IVr.TotQty = StringToVal(ImportField,M4Qty);
  IVr.TotWeight = StringToVal(ImportField,M4Qty);
  IVr.TotVolume = StringToVal(ImportField,M4Qty);
  IVr.Commision = StringToVal(ImportField,M4Val);
  IVr.SumIncCom = StringToVal(ImportField,M4Val);
  IVr.InvAddr3 = ImportField;
  IVr.InvAddr4 = ImportField;
  IVr.DelAddr3 = ImportField;
  IVr.DelAddr4 = ImportField;
  IVr.DelAddrCode = ImportField;
  IVr.AutoGiro = StringToInt(ImportField);
  IVr.SalesGroup = ImportField;
  IVr.DisputedFlag = StringToInt(ImportField);
  IVr.NoColectionFlag = StringToInt(ImportField);
  IVr.QTNr = StringToLongint(ImportField);
  IVr.FiscalFlag = StringToInt(ImportField);
  IVr.JobNr = StringToLongint(ImportField);
  IVr.RetnValue = StringToVal(ImportField,M4Val);
  IVr.MachineName = ImportField;
  IVr.TransTime = StringToTime(ImportField);
  IVr.DrawerCode = ImportField;
  IVr.SiteX = ImportField;
  IVr.colnr = StringToInt(ImportField);
  IVr.StatVal = StringToVal(ImportField,M4Val);
  IVr.EInvFunc = StringToInt(ImportField);
  IVr.EInvExpFlag = StringToInt(ImportField);
  IVr.EInvExpDate = StringToDate(ImportField);
  IVr.EInvExpQty = StringToLongint(ImportField);
  IVr.ServiceDelDate = StringToDate(ImportField);
  IVr.Region = ImportField;
  IVr.RefStr = ImportField;
  IVr.TAX2Sum = StringToVal(ImportField,M4Val);
  IVr.pdvrebt2 = StringToVal(ImportField,M4Qty);
  IVr.pdrdays2 = StringToLongint(ImportField);
  IVr.NoTax1 = StringToInt(ImportField);
  IVr.NoTax2 = StringToInt(ImportField);
  IVr.FreightCode = ImportField;
  IVr.BankCode = ImportField;
  IVr.InvalidDate = StringToDate(ImportField);
  IVr.InvalidLocOKNr = StringToVal(ImportField,M4Qty);
  IVr.NoEInvoice = StringToInt(ImportField);
  IVr.TaxAuthID = ImportField;
  IVr.TaxAuthIDCC = ImportField;
  IVr.BranchID = ImportField;
  IVr.Status = StringToInt(ImportField);
  IVr.NoTAXonVAT = StringToLongint(ImportField);
  IVr.TotalwoTAX = StringToInt(ImportField);
  IVr.CredManNr = StringToLongint(ImportField);
  IVr.RegDate = StringToDate(ImportField);
  IVr.RegTime = StringToTime(ImportField);
  IVr.COCUSerNr = StringToLongint(ImportField);
  IVr.CAE = ImportField;
  IVr.CAEExpiry = StringToDate(ImportField);
  IVr.VINr = StringToLongint(ImportField);
  IVr.TerminalID = ImportField;
  IVr.OrderType = StringToInt(ImportField);
  IVr.FiscalDeviceSeqNr = StringToLongint(ImportField);
  IVr.CCTransID = ImportField;
  IVr.AcceptanceStatus = StringToInt(ImportField);
  ImportPackedMatrix(TMr);
  PackFieldMatrix(IVr,"TaxMatrix",TMr);
  IVr.CustTaxTemplateCode = ImportField;
  IVr.RoyaltyIVFlag = StringToInt(ImportField);
  IVr.LoyaltyCardNr = ImportField;
  IVr.LCMLevel = ImportField;
  IVr.Points = StringToVal(ImportField,M4Val);
  IVr.DepCode = ImportField;
  IVr.SelfBilling = StringToInt(ImportField);
  IVr.Hash = ImportField;
  IVr.HashKeyVersion = StringToInt(ImportField);
  IVr.InvCountry = ImportField;
  IVr.DelCountry = ImportField;
  IVr.TREONr = StringToLongint(ImportField);
  IVr.ORCONr = StringToLongint(ImportField);
  IVr.CAEAStartDate = StringToDate(ImportField);
  IVr.CAEAExpiryDate = StringToDate(ImportField);
  IVr.CAEAFlag = StringToInt(ImportField);
  IVr.FInvExpFlag = StringToInt(ImportField);
  IVr.GroupInv = StringToInt(ImportField);
  IVr.Suspended = StringToInt(ImportField);
  IVr.AcceptanceBy = ImportField;
  IVr.RetNr = StringToLongint(ImportField);
  IVr.TaxAdminServSignatureTimeStamp = ImportField;
  IVr.TaxAdminServCertificateNr = ImportField;
  IVr.TaxAdminServSeal = ImportField;
  IVr.CredOfficialSerNr = ImportField;
  IVr.AcceptanceFYI = ImportField;
  IVr.PMCode = ImportField;
  IVr.PayAccNo = ImportField;
  IVr.BrazilEInvType = ImportField;
  IVr.TaxAdminReceiptNr = ImportField;
  IVr.TaxAuthReceiptDate = StringToDate(ImportField);
  IVr.TaxAuthReceiptTime = StringToTime(ImportField);
  IVr.ReceiptInfo = ImportField;
  IVr.InvalidTime = StringToTime(ImportField);
  IVr.OKBy = ImportField;
  IVr.PlanSendDate = StringToDate(ImportField);
  IVr.PlanSendTime = StringToTime(ImportField);
  IVr.PlanArrDate = StringToDate(ImportField);
  IVr.PlanArrTime = StringToTime(ImportField);
  IVr.FedServCode = ImportField;
  IVr.InvalidBy = ImportField;
  IVr.Reason = ImportField;
  IVr.InvCountryName = ImportField;
  IVr.DelCountryName = ImportField;
  IVr.OfficialSerNrSerie = ImportField;
  IVr.OfficialSerNr2Serie = ImportField;
  IVr.IPBookVAT = StringToInt(ImportField);
  IVr.ThirdPartyBillMark = StringToInt(ImportField);
  IVr.RecipientGLN = ImportField;
  IVr.DelRecipientGLN = ImportField;
  IVr.IntrastatTransCode = ImportField;
  IVr.GlobalTransportNr = ImportField;
  IVr.GlobalTransportDate = StringToDate(ImportField);
  IVr.PrintedFlag = StringToInt(ImportField);
  IVr.PrintedSum4 = StringToVal(ImportField,M4Val);
  IVr.IgnoreBlankFIFO = StringToInt(ImportField);
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(IVr,IVrw,1);
    IVrw.stp = StringToInt(ImportField);
    IVrw.ArtCode = ImportField;
    IVrw.Quant = StringToVal(ImportField,M4UVal);
    IVrw.Price = StringToVal(ImportField,M423Val);
    IVrw.Sum = StringToVal(ImportField,M4Val);
    IVrw.vRebate = StringToVal(ImportField,M41Val);
    IVrw.SalesAcc = ImportField;
    IVrw.Objects = ImportField;
    IVrw.OrdRow = StringToLongint(ImportField);
    IVrw.BasePrice = StringToVal(ImportField,M4Val);
    IVrw.rowGP = StringToVal(ImportField,M4Val);
    IVrw.FIFO = StringToVal(ImportField,M45Val);
    IVrw.Spec = ImportField;
    IVrw.VATCode = ImportField;
    IVrw.Recepy = ImportField;
    IVrw.SerialNr = ImportField;
    IVrw.PriceFactor = StringToVal(ImportField,M45Val);
    IVrw.VARList = ImportField;
    IVrw.CUPNr = StringToLongint(ImportField);
    IVrw.FIFORowVal = StringToVal(ImportField,M45Val);
    IVrw.Coefficient = StringToVal(ImportField,M45Val);
    IVrw.CuAccCode = ImportField;
    IVrw.ExciseNr = ImportField;
    IVrw.PeriodCode = ImportField;
    IVrw.UnitCode = ImportField;
    IVrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
    IVrw.UnitFactPrice = StringToVal(ImportField,M423Val);
    IVrw.UnitXval = StringToVal(ImportField,M4UVal);
    IVrw.UnitYval = StringToVal(ImportField,M4UVal);
    IVrw.UnitZval = StringToVal(ImportField,M4UVal);
    IVrw.VECode = ImportField;
    IVrw.CreditCard = ImportField;
    IVrw.AuthorizationCode = ImportField;
    IVrw.PosCode = ImportField;
    IVrw.CurncyCode = ImportField;
    IVrw.FrRate = StringToVal(ImportField,M4Rate);
    IVrw.ToRateB1 = StringToVal(ImportField,M4Rate);
    IVrw.ToRateB2 = StringToVal(ImportField,M4Rate);
    IVrw.BaseRate1 = StringToVal(ImportField,M4Rate);
    IVrw.BaseRate2 = StringToVal(ImportField,M4Rate);
    IVrw.PayMode = ImportField;
    IVrw.GCNr = StringToLongint(ImportField);
    IVrw.CustOrdNr = ImportField;
    IVrw.RepaExVAT = StringToVal(ImportField,M4Val);
    IVrw.BasePriceB2 = StringToVal(ImportField,M4Val);
    IVrw.TAX2Code = ImportField;
    IVrw.TAX2Prc = StringToVal(ImportField,M423Val);
    IVrw.TAX2Reb = StringToVal(ImportField,M4Val);
    IVrw.TAX1Reb = StringToVal(ImportField,M4Val);
    IVrw.TAX2Acc = ImportField;
    IVrw.CreditedRow = StringToLongint(ImportField);
    IVrw.NotUpdStockFlag = StringToInt(ImportField);
    IVrw.CUServiceHistNr = StringToLongint(ImportField);
    IVrw.CUServiceUntilDate = StringToDate(ImportField);
    IVrw.ServiceDelDate = StringToDate(ImportField);
    IVrw.Location = ImportField;
    IVrw.Comment = ImportField;
    IVrw.DiscApprovedBy = ImportField;
    IVrw.Perceptions = StringToInt(ImportField);
    IVrw.VoidedRowNr = StringToLongint(ImportField);
    IVrw.VoidedSign = ImportField;
    IVrw.ovst = StringToInt(ImportField);
    IVrw.Withholdings = StringToInt(ImportField);
    IVrw.WHTax = ImportField;
    IVrw.CCTransID = ImportField;
    ImportPackedMatrix(TMr);
    PackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
    IVrw.TaxTemplateCode = ImportField;
    IVrw.ResUsage = ImportField;
    IVrw.MBRCode = ImportField;
    IVrw.ChequeNr = StringToLongint(ImportField);
    IVrw.CheckNr = ImportField;
    IVrw.Points = StringToVal(ImportField,M4Val);
    IVrw.SalesAssistant = ImportField;
    IVrw.CCTimestamp = ImportField;
    IVrw.MotherArtCode = ImportField;
    IVrw.RecipeQuant = StringToVal(ImportField,M4Qty);
    IVrw.OrdNr = StringToLongint(ImportField);
    IVrw.IVNr = StringToLongint(ImportField);
    IVrw.RetRow = StringToLongint(ImportField);
    IVrw.QTRow = StringToLongint(ImportField);
    IVrw.SHNr = StringToLongint(ImportField);
    IVrw.SHRow = StringToLongint(ImportField);
    IVrw.CustArtCode = ImportField;
    IVrw.Salesmen = ImportField;
    IVrw.CredOfficialSerNr = ImportField;
    IVrw.MotherNr = ImportField;
    IVrw.AEStatus = StringToInt(ImportField);
    IVrw.CustomsNr = ImportField;
    IVrw.CountryOfOrg = ImportField;
    IVrw.SecondarySerialNr = ImportField;
    IVrw.AlternateDeviceID = ImportField;
    IVrw.MotherSecondarySerialNr = ImportField;
    IVrw.MotherAlternateDeviceID = ImportField;
    IVrw.UnitComment = ImportField;
    MatRowPut(IVr,rwcnt,IVrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagIVVc3(string thetag)
begin
  record IVVc IVr;
  
  while (NextImportLine(false)) begin
    ReadImportTagIVVc3Record(IVr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(IVr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrIVVc3(Integer compnr,string thetag)
begin
  record IVVc IVr;
  
  IVr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrIVVc3 = BuildRecordIdStr(IVr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:59:27// Edit ************************** Thursday, 5 October 2017 16:59:27// Edit ************************** Thursday, 5 October 2017 16:59:28

procedure ReadImportTagship1Record(record SHVc SHr)
begin
  string 255 tstr;
  row SHVc SHrw;
  integer rwcnt;
  
  RecordNew(SHr);
  SHr.SerNr = StringToLongint(ImportField);
  SHr.OrderNr = StringToLongint(ImportField);
  SHr.ShipDate = StringToDate(ImportField);
  SHr.CustCode = ImportField;
  SHr.Addr0 = ImportField;
  SHr.Addr1 = ImportField;
  SHr.Addr2 = ImportField;
  SHr.Addr3 = ImportField;
  SHr.Prntdf = StringToInt(ImportField);
  //SHr.x1 = 
  ImportField;
  SHr.ShipMode = ImportField;
  SHr.OKFlag = StringToInt(ImportField);
  SHr.Location = ImportField;
  SHr.LangCode = ImportField;
  SHr.PRCode = ImportField;
  SHr.Packages = StringToVal(ImportField,M4Qty);
  SHr.Weight = StringToVal(ImportField,M4Qty);
  SHr.Volyme = StringToVal(ImportField,M4Qty);
  SHr.FromCity = ImportField;
  SHr.ToCity = ImportField;
  SHr.FromDock = ImportField;
  SHr.ToDock = ImportField;
  SHr.TransportDirect = ImportField;
  SHr.Comment = ImportField;
  SHr.Check1 = StringToInt(ImportField);
  SHr.Check2 = StringToInt(ImportField);
  SHr.TransportNumber = ImportField;
  SHr.ExportedFlag = StringToInt(ImportField);
  SHr.TotQty = StringToVal(ImportField,M4Qty);
  SHr.LocOKNr = StringToVal(ImportField,M4Qty);
  SHr.Objects = ImportField;
  SHr.FreightCode = ImportField;
  SHr.FreightCompany = ImportField;
  SHr.FreightCompanyRegNr = ImportField;
  SHr.TruckInfo = ImportField;
  SHr.Driver = ImportField;
  SHr.CMRText = ImportField;
  SHr.TotWeight = StringToVal(ImportField,M4Qty);
  SHr.TotVolume = StringToVal(ImportField,M4Qty);
  SHr.SHClass = ImportField;
  SHr.DelAddr3 = ImportField;
  SHr.DelAddr4 = ImportField;
  SHr.DelAddrCode = ImportField;
  SHr.Sorting = ImportField;
  SHr.TAX1Sum = StringToVal(ImportField,M4Val);
  SHr.DeliveryMan = ImportField;
  SHr.Sign = ImportField;
  SHr.xForkLifyQueUse = StringToInt(ImportField);
  SHr.TotPalletNr = StringToVal(ImportField,M4UVal);
  SHr.Region = ImportField;
  SHr.TAX2Sum = StringToVal(ImportField,M4Val);
  SHr.Invalid = StringToInt(ImportField);
  SHr.InvalidDate = StringToDate(ImportField);
  SHr.InvoiceNr = StringToLongint(ImportField);
  SHr.EShipmentCreated = StringToInt(ImportField);
  SHr.EShipCollected = StringToInt(ImportField);
  SHr.EShipStatus = ImportField;
  SHr.DeclaredVal = StringToVal(ImportField,M4Val);
  SHr.CurncyCode = ImportField;
  SHr.TerminalID = ImportField;
  SHr.BranchID = ImportField;
  SHr.OfficialSerNr = ImportField;
  SHr.Hash = ImportField;
  SHr.HashKeyVersion = StringToInt(ImportField);
  SHr.RegDate = StringToDate(ImportField);
  SHr.RegTime = StringToTime(ImportField);
  SHr.LocalMachineCode = ImportField;
  SHr.DelCountry = ImportField;
  SHr.TREONr = StringToLongint(ImportField);
  SHr.ORCOType = ImportField;
  SHr.PlanSendDate = StringToDate(ImportField);
  SHr.PlanSendTime = StringToTime(ImportField);
  SHr.PlanArrDate = StringToDate(ImportField);
  SHr.PlanArrTime = StringToTime(ImportField);
  SHr.TaxAdminServSeal = ImportField;
  SHr.OKBy = ImportField;
  SHr.DelCountryName = ImportField;
  SHr.Status = StringToInt(ImportField);
  SHr.OfficialSerNrSerie = ImportField;
  SHr.OfficialSerNr2 = ImportField;
  SHr.OfficialSerNr2Serie = ImportField;
  
  rwcnt = 0;
  
  while (NextImportLine(false)) begin
    ClearRow(SHr,SHrw,1);
    SHrw.OrdRow = StringToLongint(ImportField);
    SHrw.ArtCode = ImportField;
    SHrw.Ordered = StringToVal(ImportField,M4UVal);
    SHrw.InStock = StringToVal(ImportField,M4UVal);
    SHrw.Ship = StringToVal(ImportField,M4UVal);
    SHrw.Spec = ImportField;
    SHrw.SerialNr = ImportField;
    SHrw.FIFO = StringToVal(ImportField,M45Val);
    SHrw.Location = ImportField;
    SHrw.Recepy = ImportField;
    SHrw.VARList = ImportField;
    SHrw.BestBefore = StringToDate(ImportField);
    SHrw.FIFORowVal = StringToVal(ImportField,M45Val);
    SHrw.Coefficient = StringToVal(ImportField,M45Val);
    SHrw.BasePrice = StringToVal(ImportField,M423Val);
    SHrw.Source = ImportField;
    SHrw.DespatchRowDate = StringToDate(ImportField);
    SHrw.DespatchRowTime = ImportField;
    SHrw.Objects = ImportField;
    SHrw.RowPackages = StringToVal(ImportField,M4UVal);
    SHrw.PackageType = ImportField;
    SHrw.PackageDesc = ImportField;
    SHrw.ExciseNr = ImportField;
    SHrw.UnitXval = StringToVal(ImportField,M4UVal);
    SHrw.UnitYval = StringToVal(ImportField,M4UVal);
    SHrw.UnitZval = StringToVal(ImportField,M4UVal);
    SHrw.MeasWeight = StringToVal(ImportField,M423Val);
    SHrw.PosCode = ImportField;
    //SHrw.xCoefficient = 
    ImportField;
    SHrw.CostAcc = ImportField;
    SHrw.WAB2 = StringToVal(ImportField,M45Val);
    SHrw.TAX2Code = ImportField;
    SHrw.TAX2Prc = StringToVal(ImportField,M423Val);
    SHrw.TAX2Reb = StringToVal(ImportField,M4Val);
    SHrw.TAX1Reb = StringToVal(ImportField,M4Val);
    SHrw.TAX2Acc = ImportField;
    SHrw.BBCostPrice = StringToVal(ImportField,M423Val);
    SHrw.SalesAcc = ImportField;
    SHrw.stp = StringToInt(ImportField);
    SHrw.MotherArtCode = ImportField;
    SHrw.RecipeQuant = StringToVal(ImportField,M4Qty);
    SHrw.Invd = StringToVal(ImportField,M4Qty);
    SHrw.CustArtCode = ImportField;
    SHrw.UnitCode = ImportField;
    SHrw.UnitComment = ImportField;
    SHrw.IMEI = ImportField;
    MatRowPut(SHr,rwcnt,SHrw);
    rwcnt = rwcnt + 1;
  end;
  
  return;
end;

global
updating procedure ReadImportTagship1(string thetag)
begin
  record SHVc SHr;
  
  while (NextImportLine(false)) begin
    ReadImportTagship1Record(SHr);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(SHr,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStrship1(Integer compnr,string thetag)
begin
  record SHVc SHr;
  
  SHr.SerNr = StringToLongint(ImportField);
  ReadRecordIdStrship1 = BuildRecordIdStr(SHr,compnr);
  return;
end;
// Edit ************************** Thursday, 5 October 2017 16:59:53// Edit ************************** Thursday, 5 October 2017 16:59:54// Edit ************************** Thursday, 5 October 2017 16:59:55

procedure ReadImportTagacttypeRecord(record ActTypeVc ActTyper)
begin
  string 255 tstr;
  RecordNew(ActTyper);
  ActTyper.Code = ImportField;
  ActTyper.Comment = ImportField;
  ActTyper.ItemCode = ImportField;
  ActTyper.ActTypeGr = ImportField;
  ActTyper.AlarmType = StringToInt(ImportField);
  ActTyper.AlarmWhen = StringToInt(ImportField);
  ActTyper.AlarmUnits = StringToInt(ImportField);
  ActTyper.AlarmToCCPersons = StringToInt(ImportField);
  ActTyper.CompTextType = ImportField;
  ActTyper.MainPersons = ImportField;
  ActTyper.CC = ImportField;
  
  return;
end;

global
updating procedure ReadImportTagacttype(string thetag)
begin
  record ActTypeVc ActTyper;
  
  while (NextImportLine(false)) begin
    ReadImportTagacttypeRecord(ActTyper);
    //logtext(0,currentcompany & "  " & thetag); 
 RecordImportStore(ActTyper,false);
  end;
  
  return;
end;

global
function string 120 ReadRecordIdStracttype(Integer compnr,string thetag)
begin
  record ActTypeVc ActTyper;
  
  ActTyper.Code = ImportField;
  ReadRecordIdStracttype = BuildRecordIdStr(ActTyper,compnr);
  return;
end;

